<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Abner</title>
  
  
  <link href="http://cdt3211.github.io/atom.xml" rel="self"/>
  
  <link href="http://cdt3211.github.io/"/>
  <updated>2023-12-20T12:16:28.879Z</updated>
  <id>http://cdt3211.github.io/</id>
  
  <author>
    <name>Abner</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>马原重点</title>
    <link href="http://cdt3211.github.io/2023/12/19/%E9%A9%AC%E5%8E%9F/"/>
    <id>http://cdt3211.github.io/2023/12/19/%E9%A9%AC%E5%8E%9F/</id>
    <published>2023-12-19T10:07:08.000Z</published>
    <updated>2023-12-20T12:16:28.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h1><h2 id="马克思主义的创立与发展"><a href="#马克思主义的创立与发展" class="headerlink" title="马克思主义的创立与发展"></a>马克思主义的创立与发展</h2><p>马克思主义的产生具有深刻的社会根源、阶级基础和思想渊源</p><ul><li>社会根源：在马克思、恩格斯生活的时代，资本主义生产方式在西欧已经有了相当的发展。</li><li>阶级：无产阶级在反抗资产阶级剥削和压迫的斗争中，逐步走向自觉，并迫切渴望科学的理论指导。</li><li>理论：德国古典哲学、英国古典政治经济学、英法空想社会主义为马克思主义的创立提供了直接的理论来源。</li></ul><h2 id="马克思主义的基本特征"><a href="#马克思主义的基本特征" class="headerlink" title="马克思主义的基本特征"></a>马克思主义的基本特征</h2><p>马克思主义具有鲜明的科学性、人民性、实践性、发展性，体现了马克思主义的本质和使命，展现出马克思主义的理论形象。</p><h2 id="自觉学习和运用马克思主义"><a href="#自觉学习和运用马克思主义" class="headerlink" title="自觉学习和运用马克思主义"></a>自觉学习和运用马克思主义</h2><p>大学生在学习马克思主义理论的过程中，要有正确的态度和科学的方法：</p><ol><li>努力学习和掌握马克思主义的基本立场观点方法。</li><li>努力学习和掌握马克思主义中国化时代化的理论成果</li><li>坚持理论联系实际的马克思主义学风</li><li>自觉将马克思主义内化于心、外化于行</li></ol><h1 id="第一章-世界的物质性及其发展规律"><a href="#第一章-世界的物质性及其发展规律" class="headerlink" title="第一章 世界的物质性及其发展规律"></a>第一章 世界的物质性及其发展规律</h1><h3 id="物质及其存在方式"><a href="#物质及其存在方式" class="headerlink" title="物质及其存在方式"></a>物质及其存在方式</h3><p>哲学基本问题主要包括两方面内容：</p><ol><li>存在和思维、物质和意识谁为原本的问题，即何者为第一性的问题；对这一问题的不同回答，形成了唯物主义和唯心主义两种根本对立的哲学派别</li><li>存在和思维、物质和意识是否具有同一性的问题，即思维能否正确地反映存在、人能否认识或彻底认识世界的问题；对这一问题的不同回答，产生了可知论和不可知论的理论分野</li></ol><p>对哲学基本问题的回答是解决其他一切哲学问题的前提和基础。</p><h3 id="哲学的物质范畴"><a href="#哲学的物质范畴" class="headerlink" title="哲学的物质范畴"></a>哲学的物质范畴</h3><p>物质是不依赖于人类的意识而存在，并能为人类的意识所反映的客观实在。这种客观性，是从自认存在和社会存在中抽象出的共同特性。</p><h3 id="物质的存在方式"><a href="#物质的存在方式" class="headerlink" title="物质的存在方式"></a>物质的存在方式</h3><ul><li>物质的根本属性是运动</li><li>物质世界的运动是绝对的，而物质在运动过程中又有某种相对的静止</li><li>时间和空间是运动着的物质的基本存在形式<ul><li>时间是指物质运动的持续性、顺序性，特点是一维性，即时间的流逝一去不复返</li><li>空间是指物质的广延性、伸张性，特点是三维性，即空间具有长、宽、高三方面的规定性</li></ul></li></ul><h3 id="物质与意识-的辩证关系"><a href="#物质与意识-的辩证关系" class="headerlink" title="物质与意识 的辩证关系"></a>物质与意识 的辩证关系</h3><p>人的意识是物质世界长期发展的产物，是社会实践的产物。</p><ul><li>物质决定意识</li><li>意识对物质具有反作用</li></ul><h3 id="联系和发展的普遍性"><a href="#联系和发展的普遍性" class="headerlink" title="联系和发展的普遍性"></a>联系和发展的普遍性</h3><p>联系和发展的观点是唯物辩证法的总观点，集中体现了唯物辩证法的总特征。</p><p>联系是指事物内部各要素之间和事物之间相互影响、相互制约、相互作用的关系。</p><p>联系具有一系列特点：</p><ol><li>客观性</li><li>普遍性</li><li>多样性</li><li>条件性</li></ol><h3 id="对立统一规律是事物发展的根本规律"><a href="#对立统一规律是事物发展的根本规律" class="headerlink" title="对立统一规律是事物发展的根本规律"></a>对立统一规律是事物发展的根本规律</h3><p>矛盾是反映事物内部或事物之间对立统一的哲学范畴。对立和统一分别体现了矛盾的两种基本属性。对立属性又称斗争性，统一属性又称同一性。</p><p>矛盾的同一性是指矛盾着的对立面相互依存、相互贯通的性质和趋势；</p><p>矛盾的斗争性是矛盾着的对立面相互排斥、相互分离的性质和趋势。</p><h3 id="矛盾的普遍性和特殊性及其相互关系"><a href="#矛盾的普遍性和特殊性及其相互关系" class="headerlink" title="矛盾的普遍性和特殊性及其相互关系"></a>矛盾的普遍性和特殊性及其相互关系</h3><p>矛盾的普遍性是指矛盾存在于一切事物中，存在于一切事物发展过程的始终，旧的矛盾解决了，又产生新的矛盾，事务始终在矛盾中运动。</p><p>矛盾的特殊性是指各个具体事务的矛盾、每一个矛盾的各个方面在发展的不同阶段上各有特点。</p><p>矛盾的普遍性和特殊性是辩证统一的关系。</p><p>矛盾的普遍性和特殊性辩证关系原理是马克思主义基本原理同各国实际相结合的基础。</p><h3 id="量变质变规律"><a href="#量变质变规律" class="headerlink" title="量变质变规律"></a>量变质变规律</h3><p>量变和质变的辩证关系是：</p><ol><li>量变是质变的必要准备</li><li>质变是量变的必然结果，并为新的量变开辟道路</li><li>量变和质变是相互渗透的</li></ol><p>量变质变规律具有重要的方法论意义。当事物发展在量变阶段时，要踏实工作，为未来重大改变做准备；当质变来临时，要果断抓住机遇，促成质变，使工作迈上新台阶。</p><h3 id="否定之否定规律"><a href="#否定之否定规律" class="headerlink" title="否定之否定规律"></a>否定之否定规律</h3><p>事物内部都存在肯定因素和否定因素。</p><p>否定之否定规律揭示了事物发展的前进性与曲折性的统一。</p><h1 id="第二章-实践与认识及其发展规律"><a href="#第二章-实践与认识及其发展规律" class="headerlink" title="第二章 实践与认识及其发展规律"></a>第二章 实践与认识及其发展规律</h1><h3 id="科学实践观的创立与发展"><a href="#科学实践观的创立与发展" class="headerlink" title="科学实践观的创立与发展"></a>科学实践观的创立与发展</h3><p>在《关于费尔巴哈的提纲》这个包含新世界观天才萌芽的第一个文件中，马克思系统论述了实践的观点，揭示了科学实践观的基本内容。</p><h3 id="实践的本质"><a href="#实践的本质" class="headerlink" title="实践的本质"></a>实践的本质</h3><p>实践是人类能动地改造世界的社会性的物质活动，具有客观实在性、自觉能动性和社会历史性三个基本特征。</p><ol><li>实践具有客观实在性。实践是人类改造世界的客观物质活动，它虽然是人类有目的、有意识的行为，但本质上是客观的、物质的活动。</li><li>自觉能动性。与动物本能的、被动的适应性活动不同，人的实践活动是一种有目的、有意识地活动。</li><li>社会历史性。实践是社会性地、历史性的活动。</li></ol><h3 id="实践的基本结构"><a href="#实践的基本结构" class="headerlink" title="实践的基本结构"></a>实践的基本结构</h3><p>实践的主题、客体和中介是实践活动的三项基本要素，三者的有机统一构成实践的基本结构。</p><p>实践的主体和客体相互作用的关系，包括实践关系、认识关系和价值关系，其中实践关系是最根本的关系。实践的主体和客体与认识的主体和客体在本质上是一致的。认识的主体和客体的关系不仅仅是认识与被认识的关系，而且首先是改造与被改造的关系。主体认识客体的过程，也是主体改造客体的过程。主体对客体的认识和改造，说到底是为了满足自己的需要，因而又构成了价值关系。</p><h3 id="实践形式的多样性"><a href="#实践形式的多样性" class="headerlink" title="实践形式的多样性"></a>实践形式的多样性</h3><p>(p77)实践的形式可分为以下三种类型：</p><ol><li>物质生产实践</li><li>社会政治实践</li><li>科学文化实践</li></ol><h3 id="实践对认识的决定作用p79"><a href="#实践对认识的决定作用p79" class="headerlink" title="实践对认识的决定作用p79"></a>实践对认识的决定作用p79</h3><p>四个方面：</p><ol><li>实践是认识的来源</li><li>实践是认识发展的动力</li><li>实践是认识的目的</li><li>实践是检验真理的唯一标准</li></ol><h3 id="认识的本质p81"><a href="#认识的本质p81" class="headerlink" title="认识的本质p81"></a>认识的本质p81</h3><ul><li>唯物主义认识路线坚持反映论的立场，认为认识是主体对客体的反映，人的一切知识都是从后天接触实际中得来的</li><li>唯心主义认识路线否认认识是人脑对客观世界的反映，认为认识先于人的实践经验</li><li>旧唯物主义认识论的基本特点是以感性直观为基础，把人的认识看成是消极地、被动地反映和接受外界对象，类似于照镜子那样的反射活动，所以又称为直观的、消极被动的反映论</li><li>辩证唯物主义认识论认为，认识的本质是主体在实践基础上对客体的能动反映。这种能动反映不但具有反映客体内容的反应性特征，而且具有实践所要求的主体能动的、创造性的特征</li></ul><h3 id="从实践到认识p84"><a href="#从实践到认识p84" class="headerlink" title="从实践到认识p84"></a>从实践到认识p84</h3><p>感性认识是人们在实践基础上，由感觉器官直接感受到的关于事物的现象、事物的外部联系、事物的各个方面的认识。</p><p>理性认识是指人们借助抽象思维，在概括整理大量感性材料的基础上，达到关于事物的本质、全体、内部联系和事物自身规律的认识。</p><p>感性认识和理性认识的性质虽然不同，但二者的关系是辩证统一的。</p><ol><li>理性认识依赖于感性认识</li><li>感性认识有待于发展和深化为理性认识</li><li>感性认识和理性认识相互渗透、相互包含</li></ol><h3 id="价值p103"><a href="#价值p103" class="headerlink" title="价值p103"></a>价值p103</h3><p>价值是反映主体和客体之间意义关系的哲学范畴，是客体对个人、群体乃至整个社会的生活和活动所具有的意义</p><h3 id="价值的基本特性"><a href="#价值的基本特性" class="headerlink" title="价值的基本特性"></a>价值的基本特性</h3><p>价值具有主体性、客观性、多维性和社会历史性四个基本特性，它们是价值本质的表现。</p><h3 id="认识世界和改造世界及其辩证关系p110"><a href="#认识世界和改造世界及其辩证关系p110" class="headerlink" title="认识世界和改造世界及其辩证关系p110"></a>认识世界和改造世界及其辩证关系p110</h3><h3 id="认识世界和改造世界的过程是从必然走向自由的过程p112"><a href="#认识世界和改造世界的过程是从必然走向自由的过程p112" class="headerlink" title="认识世界和改造世界的过程是从必然走向自由的过程p112"></a>认识世界和改造世界的过程是从必然走向自由的过程p112</h3><p>在自由问题上，哲学史看法大致分为两类：一是倡导消极地顺应自然、抹杀人类自由可能性的宿命论；二是强调人的意志或某种精神力量绝对自由的唯意志论，否定客观必然性，片面强调主体性的毫无限制。<strong>二者都是错误的</strong>。</p><p>马克思认为，自由是表示人的活动状态的范畴，是指人在活动中认识和利用必然所表现出的一种自觉自主的状态。</p><h1 id="第三章-人类社会及其发展规律"><a href="#第三章-人类社会及其发展规律" class="headerlink" title="第三章 人类社会及其发展规律"></a>第三章 人类社会及其发展规律</h1><h3 id="社会存在p125"><a href="#社会存在p125" class="headerlink" title="社会存在p125"></a>社会存在p125</h3><p>社会存在是指社会物质生活条件，是社会生活的物质方面，主要包括自然地理环境、人口因素和物质生产方式。</p><h3 id="社会意识"><a href="#社会意识" class="headerlink" title="社会意识"></a>社会意识</h3><p>社会意识是社会存在的反映，是社会生活的精神方面。</p><h3 id="社会存在和社会意识的辩证关系"><a href="#社会存在和社会意识的辩证关系" class="headerlink" title="社会存在和社会意识的辩证关系"></a>社会存在和社会意识的辩证关系</h3><p>辩证统一的。社会存在决定社会意识，社会意识是社会存在的反映，并反作用于社会存在。</p><h3 id="社会基本矛盾及其运动规律p132"><a href="#社会基本矛盾及其运动规律p132" class="headerlink" title="社会基本矛盾及其运动规律p132"></a>社会基本矛盾及其运动规律p132</h3><p>生产力与生产关系、经济基础与上层建筑之间的矛盾，是人类社会基本矛盾。生产力与生产关系矛盾运动的规律、经济基础与上层建筑矛盾运动的规律，是人类社会发展的基本规律。深刻地理解和掌握这一基本矛盾和这一基本规律具有重要的意义。</p><h3 id="生产力以生产关系的矛盾运动及其规律"><a href="#生产力以生产关系的矛盾运动及其规律" class="headerlink" title="生产力以生产关系的矛盾运动及其规律"></a>生产力以生产关系的矛盾运动及其规律</h3><p>生产力是人类在生产实践中形成的改造和影响自然以使其适合社会需要的物质力量。</p><p>生产力是结构复杂的系统，其基本要素包括：</p><ol><li>劳动资料，也称劳动手段</li><li>劳动对象</li><li>劳动者</li></ol><p>生产关系是人们在物质生产过程中形成的不以人的意志为转移的经济关系。</p><p>生产力与生产关系的相互关系是：生产力决定生产关系，生产关系对生产力具有能动的反作用。</p><h3 id="经济基础与上层建筑的矛盾运动及其规律"><a href="#经济基础与上层建筑的矛盾运动及其规律" class="headerlink" title="经济基础与上层建筑的矛盾运动及其规律"></a>经济基础与上层建筑的矛盾运动及其规律</h3><p>经济基础是指由社会一定发展阶段的生产力所决定的生产关系的总和。</p><p>上层建筑是建立在一定经济基础之上的意识形态以及与之相适应的制度、组织和设施。</p><p>经济基础与上层建筑是辩证统一的。</p><ol><li>经济基础决定上层建筑。任何上层建筑的产生、存在和发展，都能直接或间接地从社会的经济结构中得到说明</li><li>上层建筑对经济基础具有反作用</li><li>经济基础与上层建筑的相互作用构成二者的矛盾运动</li><li>经济基础与上层建筑之间的内在联系构成了上层建筑一定要适应经济基础的规律</li></ol><h3 id="社会基本矛盾是历史发展的根本动力p152"><a href="#社会基本矛盾是历史发展的根本动力p152" class="headerlink" title="社会基本矛盾是历史发展的根本动力p152"></a>社会基本矛盾是历史发展的根本动力p152</h3><p>矛盾是推动事物发展的动力，社会领域也不例外。</p><p>生产力和生产关系、经济基础和上层建筑的矛盾，规定并反映了社会基本结构的性质和基本面貌，涉及社会的基本领域，囊括社会结构的主要方面。</p><p>社会基本结构包括经济结构、政治结构和观念结构。</p><h3 id="人民群众是历史的创造者p169"><a href="#人民群众是历史的创造者p169" class="headerlink" title="人民群众是历史的创造者p169"></a>人民群众是历史的创造者p169</h3><p>唯物史观与唯心史观的对立，在历史创造问题上表现为群众史观与英雄史观的对立。</p><h3 id="人民群众在创造历史过程中的决定作用p172（重点）"><a href="#人民群众在创造历史过程中的决定作用p172（重点）" class="headerlink" title="人民群众在创造历史过程中的决定作用p172（重点）"></a>人民群众在创造历史过程中的决定作用p172（重点）</h3><ol><li><strong>人民群众是社会物质财富的创造者</strong></li><li><strong>人民群众是社会精神财富的创造者</strong></li><li><strong>人民群众是社会变革的决定力量</strong></li></ol><h3 id="群众、阶级、政党、领袖的关系"><a href="#群众、阶级、政党、领袖的关系" class="headerlink" title="群众、阶级、政党、领袖的关系"></a>群众、阶级、政党、领袖的关系</h3><ol><li>首先，群众是划分为阶级的</li><li>其次，阶级通常是由政党领导的</li><li>最后。政党是由领袖来主持的</li></ol><p>群众、阶级、政党、领袖环环相扣、相互依存，构成一个有机整体，任何时候都不应该把他们割裂开来。</p><h1 id="第四章-资本主义的本质及其规律"><a href="#第四章-资本主义的本质及其规律" class="headerlink" title="第四章 资本主义的本质及其规律"></a>第四章 资本主义的本质及其规律</h1><h3 id="商品的而因素和生产商品的劳动的二重性p184（重点）"><a href="#商品的而因素和生产商品的劳动的二重性p184（重点）" class="headerlink" title="商品的而因素和生产商品的劳动的二重性p184（重点）"></a>商品的而因素和生产商品的劳动的二重性p184（重点）</h3><p>商品是用来交换、能满足人的某种需要的劳动产品，具有使用价值和价值两个因素或两种属性，是使用价值和价值的矛盾统一体。</p><p>商品是劳动产品，生产商品的劳动具有二重性即具体劳动和抽象劳动。</p><h3 id="商品价值量的决定"><a href="#商品价值量的决定" class="headerlink" title="商品价值量的决定"></a>商品价值量的决定</h3><p>商品的价值包括质的规定与量的规定两个方面。</p><p>决定商品价值量的不是生产商品的个别劳动时间，而是社会必要劳动时间。</p><h3 id="价值形式的发展与货币的产生"><a href="#价值形式的发展与货币的产生" class="headerlink" title="价值形式的发展与货币的产生"></a>价值形式的发展与货币的产生</h3><p>货币是在上期交换过程中形成的固定充当<strong>一般等价物</strong>（本质）的商品，是商品经济内在矛盾发展的产物，货币的本质体现一种社会关系。</p><p>货币具有价值尺度、流通手段、贮藏手段、支付手段和世界货币等职能，其中价值尺度和流通手段是最基本的职能。</p><h3 id="价值规律及其作用"><a href="#价值规律及其作用" class="headerlink" title="价值规律及其作用"></a>价值规律及其作用</h3><p>价值规律是商品生产和商品交换的基本规律。这一规律的主要内容和客观要求是，商品的价值量由生产商品的社会必要劳动时间决定，商品交换以价值量为基础，按照等价交换的原则进行。</p><h3 id="以私有制为基础的商品经济的基本矛盾p191"><a href="#以私有制为基础的商品经济的基本矛盾p191" class="headerlink" title="以私有制为基础的商品经济的基本矛盾p191"></a>以私有制为基础的商品经济的基本矛盾p191</h3><p>商品的使用价值和价值的矛盾、生产商品的具体劳动和抽象劳动的矛盾，根源于私人劳动和社会劳动的矛盾。私人劳动和社会劳动的矛盾是商品经济的基本矛盾。</p><h3 id="资本的原始积累"><a href="#资本的原始积累" class="headerlink" title="资本的原始积累"></a>资本的原始积累</h3><p>资本的原始积累主要是通过两个途径进行的：</p><ol><li>用暴力手段剥夺农民的土地（<strong>基础</strong>）</li><li>用暴力手段掠夺货币财富</li></ol><h3 id="劳动力成为商品与货币转化为资本p204"><a href="#劳动力成为商品与货币转化为资本p204" class="headerlink" title="劳动力成为商品与货币转化为资本p204"></a>劳动力成为商品与货币转化为资本p204</h3><p>资本首先表现为一定量的货币，但货币本身并不就是资本。</p><p>简单商品流通公式“<em>W—G—W</em>“，W是商品，G是流通中的货币。</p><p>“<em>G—W—G’</em>“公式中，W是商品，G代表的不是一般意义上的货币，而是作为资本的货币，G’代表的是价值增殖后的货币。这个公式表明资本运动的一般目的是价值增殖，因此称为”资本总公式“。</p><p>从形式上看，资本总公式与商品交换的原则是矛盾的。资本总公式表明，资本在流通中创造了新价值。理解这个矛盾的关键在于劳动力成为商品。</p><p>劳动力成为商品，要具备两个基本条件：</p><ol><li>劳动者在法律上是自由人，能够把自己的劳动力当作自己的商品来支配</li><li>劳动者没有任何生产资料，没有生活资料来源，因而不得不依靠出卖劳动力为生</li></ol><h3 id="剩余价值的生产过程和资本的不同部分在剩余价值生产中的作用p207"><a href="#剩余价值的生产过程和资本的不同部分在剩余价值生产中的作用p207" class="headerlink" title="剩余价值的生产过程和资本的不同部分在剩余价值生产中的作用p207"></a>剩余价值的生产过程和资本的不同部分在剩余价值生产中的作用p207</h3><p>根据资本在剩余价值生产中所起的不同作用，可以将资本划分为不变资本与可变资本。</p><ul><li>不变资本是以生产资料形态存在的资本</li><li>可变资本是用来购买劳动力的那部分资本</li></ul><p>资本主义商品的价值构成公式（c代表不变资本，v代表可变资本，m代表剩余价值）：<br>$$<br>W=c+v+m<br>$$<br>剩余价值率公式：<br>$$<br>m’=m/v<br>$$</p><p>$$<br>m’=剩余劳动/必要劳动=剩余劳动时间/必要劳动时间<br>$$</p><h3 id="剩余价值生产的两种基本方法"><a href="#剩余价值生产的两种基本方法" class="headerlink" title="剩余价值生产的两种基本方法"></a>剩余价值生产的两种基本方法</h3><p>资本家提高对工人剥削程度的方法是多种多样的，最基本的方法有两种，即绝对剩余价值的生产和相对剩余价值的生产。</p><ul><li>绝对剩余价值是指在必要劳动时间不变的条件下，由于延长工作日的长度或提高劳动强度而生产的剩余价值。</li><li>相对剩余价值是指在工作日长度不变的条件下，通过缩短必要劳动时间而相对延长剩余劳动时间所生产的剩余价值。</li></ul><h3 id="资本主义基本矛盾p222"><a href="#资本主义基本矛盾p222" class="headerlink" title="资本主义基本矛盾p222"></a>资本主义基本矛盾p222</h3><p>生产社会化和生产资料资本主义私人占有之间的矛盾，是资本主义的基本矛盾。</p><h3 id="资本主义意识形态的本质p233"><a href="#资本主义意识形态的本质p233" class="headerlink" title="资本主义意识形态的本质p233"></a>资本主义意识形态的本质p233</h3><p>资本主义意识形态的本质可以概括为两方面：</p><ol><li>资本主义意识形态是资本主义社会的观念上层建筑，是为资本主义的经济基础服务的，因而是为资本主义国家的政治上层建筑服务的</li><li>资本主义意识形态是资产阶级的阶级意识的集中体现</li></ol><h1 id="第五章-资本主义的发展及其趋势"><a href="#第五章-资本主义的发展及其趋势" class="headerlink" title="第五章 资本主义的发展及其趋势"></a>第五章 资本主义的发展及其趋势</h1><h3 id="资本主义从自由竞争到垄断"><a href="#资本主义从自由竞争到垄断" class="headerlink" title="资本主义从自由竞争到垄断"></a>资本主义从自由竞争到垄断</h3><p>资本主义的发展经历了两个阶段：自由竞争资本主义和垄断资本主义。19实际70年代以前，资本主义处于自由竞争阶段：从19实际70年代开始，自由竞争资本主义逐步向垄断资本主义发展：19世纪末20世纪初，垄断代替自由竞争并占据统治地位，垄断资本主义得以形成。这一时期，垄断资本主义主要以私人垄断资本为基础，所以又叫私人垄断资本主义。私人垄断资本主义是在生产集中和资本集中的基础上形成的。</p><h3 id="生产集中与垄断的形成"><a href="#生产集中与垄断的形成" class="headerlink" title="生产集中与垄断的形成"></a>生产集中与垄断的形成</h3><p>生产集中是指生产资料、劳动力和商品的生产日益集中于少数大企业的过程，其结果是大企业在整个社会生产中所占的比重不断增加。资本集中是指大资本吞并小资本，或由许多小资本合并而成大资本的过程，其结果是越来越多的资本为少数大资本家所支配。</p><p>垄断的产生有以下原因：</p><ol><li>当生产集中发展到相当高的程度，极少数企业就会联合起来，操纵和控制部门的生产和销售，实行垄断，以获得高额利润</li><li>企业规模巨大，形成对竞争的限制，也会产生垄断</li><li>激烈的竞争给竞争各方带来的损失越来越严重，为了避免两败俱伤，企业之间会达成妥协，联合起来，实行垄断</li></ol><h3 id="垄断条件下竞争的特点p239"><a href="#垄断条件下竞争的特点p239" class="headerlink" title="垄断条件下竞争的特点p239"></a>垄断条件下竞争的特点p239</h3><p>垄断条件下的竞争同自由竞争相比，具有一些新特点。不仅规模大、时间长、手段残酷、程度激烈，而且具有更大的破坏性。</p><h3 id="金融资本与金融寡头"><a href="#金融资本与金融寡头" class="headerlink" title="金融资本与金融寡头"></a>金融资本与金融寡头</h3><ul><li>金融资本是由工业垄断资本和银行垄断资本融合在一起而形成的一种垄断资本。</li><li>金融寡头是指操纵国民经济命脉，并在实际上控制国家政权的少数垄断资本家或垄断资本家集团。</li></ul><h3 id="国家垄断资本主义的形成及作用p242"><a href="#国家垄断资本主义的形成及作用p242" class="headerlink" title="国家垄断资本主义的形成及作用p242"></a>国家垄断资本主义的形成及作用p242</h3><ul><li>早在第一次世界大战期间，资本主义交战国的政府就借助国家的力量扩军备战，推行国民经济军事化，普遍加强了国家对社会经济和人民生活的统治和管理，对全部生产实行最严格的统计和监督，国家垄断资本主义由此得以产生。</li><li>1929-1933年，资本主义世界发生了有史以来最严重的经济危机，深刻动摇了资本主义经济制度的根基，危及资本主义的生存。</li><li>1939-1945年第二次世界大战全面爆发期间，帝国主义各国都建立了战时经济管理体制，国家对整个国民经济和社会生活实行全面统制，国家垄断资本主义得到进一步发展。</li><li>第二次世界大战后，国家垄断资本主义作为一种新的垄断资本主义生产关系最终得以确立。</li></ul><p>国家垄断资本主义的主要形式有五种：</p><ol><li>国家所有并直接经营企业，包括满足国家机构自身需要的国有企业，提供公共产品的国有企业，高可以、高风险的新兴工业部门中的国有企业和一般工业部门中的国有企业</li><li>国家与私人共有、合营企业</li><li>国家通过多种形式参与私人垄断资本的再生产过程</li><li>宏观调节， 用财政政策、货币政策等经济手段对社会总供给和总需求进行调节</li><li>微观规制，运用法律手段规范市场秩序，限制垄断，保护竞争，维护社会公众的合法权益</li></ol><p>作用：国家垄断资本主义是垄断资本主义的发展，它对资本主义经济的发展产生了积极的影响 。但是，国家垄断资本主义的出现并没有根本改变垄断资本主义的性质。</p><h3 id="垄断资本向世界范围的扩展p248"><a href="#垄断资本向世界范围的扩展p248" class="headerlink" title="垄断资本向世界范围的扩展p248"></a>垄断资本向世界范围的扩展p248</h3><p>垄断资本向世界范围的扩展，产生了一系列的社会经济后果：</p><ul><li>对于资本输出国来讲，</li><li>资本书如果主要是发展中国家，对发展中国家来讲，</li></ul><h3 id="经济全球化的表现"><a href="#经济全球化的表现" class="headerlink" title="经济全球化的表现"></a>经济全球化的表现</h3><ol><li>生产全球化</li><li>贸易全球化</li><li>金融全球化</li></ol><h3 id="经济全球化的动因"><a href="#经济全球化的动因" class="headerlink" title="经济全球化的动因"></a>经济全球化的动因</h3><p>从本质上讲，竞价全球化是生产力发展和社会化大生产的必然要求。导致经济全球化迅猛发展的因素主要有三点：</p><ol><li>科学技术的进步和生产力的发展为经济全球化提供了坚实的物质基础和根本的推动力</li><li>跨国公司的发展为经济全球化提供了适宜的企业组织形式</li><li>各国经济体制的变革和国际经济组织的发展是经济全球化的体制与组织保障</li></ol><h3 id="经济全球化的影响"><a href="#经济全球化的影响" class="headerlink" title="经济全球化的影响"></a>经济全球化的影响</h3><p>对发展中国家的积极影响：</p><ol><li>为发展中国家提供先进技术和管理经验</li><li>提供更多就业机会</li><li>推动国际贸易的发展</li><li>促进跨国公司的发展</li></ol><p>负面影响：</p><ol><li>发达国家和发展中国家在经济全球化进程中的地位和收益不平等、不平衡</li><li>加剧了发展中国家资源短缺和环境污染</li><li>一定程度上增加了经济风险</li></ol><h3 id="第二次世界大战后资本主义的变化的主要表现p257"><a href="#第二次世界大战后资本主义的变化的主要表现p257" class="headerlink" title="第二次世界大战后资本主义的变化的主要表现p257"></a>第二次世界大战后资本主义的变化的主要表现p257</h3><ol><li>生产资料所有制的变化</li><li>劳资关系和分配关系的变化</li><li>社会阶层和阶级结构的变化</li><li>经济调节机制和经济危机形态的变化</li><li>政治制度的变化</li></ol><h3 id="变化的原因和实质"><a href="#变化的原因和实质" class="headerlink" title="变化的原因和实质"></a>变化的原因和实质</h3><p>原因：</p><ol><li>科学技术革命和生产力的发展，是资本主义发生变化的根本推动力量</li><li>工人阶级争取自身权利和 利益的斗争，是推动资本主义发生变化的重要力量</li><li>社会主义制度初步显示的优越性对资本主义产生了重要影响</li><li>主张改良主义的政党对资本主义制度的改革，也对资本主义发生变化起到了重要作用</li></ol><h3 id="资本主义的历史地位"><a href="#资本主义的历史地位" class="headerlink" title="资本主义的历史地位"></a>资本主义的历史地位</h3><p>与封建社会相比，资本主义显示了巨大的历史进步性：</p><ol><li>资本主义将科学技术转变为强大的生产力</li><li>资本追求的剩余价值的内在动力和竞争的外在压力推动了社会生产力的迅速发展</li><li>资本主义的意识形态和政治制度作为上层建筑在战胜封建社会自给自足的小生产的生产方式，保护、促进和完善资本主义生产方式方面起着重要作用，从而推动了社会生产力的迅速发展，促进了社会进步</li></ol><p>然而，资本主义的历史进步性并不能掩盖其自身的局限性：</p><ol><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导论&quot;&gt;&lt;a href=&quot;#导论&quot; class=&quot;headerlink&quot; title=&quot;导论&quot;&gt;&lt;/a&gt;导论&lt;/h1&gt;&lt;h2 id=&quot;马克思主义的创立与发展&quot;&gt;&lt;a href=&quot;#马克思主义的创立与发展&quot; class=&quot;headerlink&quot; title=&quot;马克思</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="马原" scheme="http://cdt3211.github.io/tags/%E9%A9%AC%E5%8E%9F/"/>
    
  </entry>
  
  <entry>
    <title>外国影视名作欣赏笔记</title>
    <link href="http://cdt3211.github.io/2023/12/18/movies/"/>
    <id>http://cdt3211.github.io/2023/12/18/movies/</id>
    <published>2023-12-18T13:43:09.000Z</published>
    <updated>2023-12-20T12:39:11.275Z</updated>
    
    <content type="html"><![CDATA[<p>类型电影是美国的主流</p><p>艺术电影（如星际穿越）：社会写实风格，呈现导演个人思考，注重主角的思想而非故事</p><p>类型电影（如战狼，流浪地球）：比现实世界更丰富，有保证的快感，商业社会</p><h1 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h1><blockquote><p>本周观看《瓦尔特保卫萨拉热窝》（南斯拉夫）</p></blockquote><h2 id="与中国人看的“神剧”形成鲜明对比"><a href="#与中国人看的“神剧”形成鲜明对比" class="headerlink" title="与中国人看的“神剧”形成鲜明对比"></a>与中国人看的“神剧”形成鲜明对比</h2><p>总的来说，外国战争电影初次引入中国时，对中国影视技术、内容和思想等方面都产生了积极的影响。引进外国技术手段促进了中国影视技术的创新，多元化的影片内容和主题使中国观众的文化和审美观念得到了开拓和拓展，而影片中对历史和文化的描绘也在一定程度上激起了人们对于爱国主义和国家事业的热情。这些因素共同促进了中国影视发展，并推动了中国文化的传承与发展。</p><h1 id="第二周-日本电影"><a href="#第二周-日本电影" class="headerlink" title="第二周 日本电影"></a>第二周 日本电影</h1><blockquote><p>本周观看《追捕》（日本）</p></blockquote><h1 id="第三周-《远山的呼唤》"><a href="#第三周-《远山的呼唤》" class="headerlink" title="第三周 《远山的呼唤》"></a>第三周 《远山的呼唤》</h1><p>总结一下，日本电影强调情感表达，注重打破传统观念，在审美方式上具有独特特点，同时影视文化交融，运用经典元素和传统文化。许多电影作品探讨的是当下社会的背景和问题，关注个人情感和社会问题，丰富了电影创作的内涵。</p><h1 id="第四周-黑色电影"><a href="#第四周-黑色电影" class="headerlink" title="第四周 黑色电影"></a>第四周 黑色电影</h1><blockquote><p>本周观看《惊世狂花》</p></blockquote><p>对一些“坏女人”的描绘，实际上是战争过后男性对于女性走出家庭、经济独立的恐惧。</p><p>该片制作非常精致，影片打破了传统的叙事结构 ，让整个故事充满惊奇，而导演细腻地处理两位女主角关系的转折，更使影片有别于传统犯罪类型电影，而增添许多张力 。（<em>环球在线评</em>）该片试图用其独特的风格和性感超越社会现实，真正地传达同性恋的吸引力与满足感。<em>（新浪评）</em>该片运用多样的拍摄手法，因此视觉效果相当不错。但该片没有在好莱坞得到成功，也许是好莱坞的主题思是以男性为主的，女性在这里面是配角是起衬托男性的作用的。而这部电影恰好不是这样，它是一部典范型的女权主义电影</p><h1 id="第五周-《源代码》"><a href="#第五周-《源代码》" class="headerlink" title="第五周 《源代码》"></a>第五周 《源代码》</h1><h1 id="第七周-战争电影"><a href="#第七周-战争电影" class="headerlink" title="第七周 战争电影"></a>第七周 战争电影</h1><blockquote><p>本周观看《野战排》</p></blockquote><p>《野战排》展现了越南战争期间士兵面临的人性危机和战争残酷，引发了观众对战争的反思和深刻思考，提高了人们对和平的珍视和重视。</p><p>拍摄手法：《野战排》是一部采用创新拍摄手法的电影，导演奥利弗·斯通使用了手持镜头和移动镜头等手法来加强观众的参与感和真实感，同时使用了较低的视角和暗色调等手法来增强电影的真实感和紧张感。电影中还使用了大量的实拍素材，其中包括越南战争期间的彩色录像和照片，进一步加强了电影的真实感。总体来说，《野战排》是一部非常成功的电影，被公认为越战电影中的经典之作。</p><p>观众对战争影片抱有双重期待</p><ol><li>对战争表层形态真实的期待感</li><li>对战争中所表现出的正义、道义的期待</li></ol><p>战争电影以非理性的欲望释放吸引大众娱乐消费，在叙述暴力事件中建构截然对立的善恶价值，传达出特殊国家的意志及其利益······</p><p>美国奥斯卡获奖电影艺术价值表现在——艺术内容“说什么”，而不在艺术形式“怎么说”</p><p>1929-2022年，94届奥斯卡最佳影片中战争片有19部</p><p>奥斯卡最佳影片的战争片并不局限于美国，而是整个西方战争的叙述者。</p><p>既包括美国卷入的两次世界大战、越战、伊拉克战争，还包括与美国无关的西方历史上的战争传奇，如古罗马战争、苏格兰解放运动等等。</p><p>立足美国、囊括欧洲、代西方发声的战争片贯穿整个美国电影史，塑造了西方代言者的形象，大大增强了奥斯卡金像奖及美国电影的影响力</p><h2 id="善-恶的话语构建与编码机制"><a href="#善-恶的话语构建与编码机制" class="headerlink" title="善/恶的话语构建与编码机制"></a>善/恶的话语构建与编码机制</h2><p>战争片，区分敌我是首要的问题，道德的善恶是构建敌我的重要内容</p><p>国别的角度，恶/敌人对象有变化——“二战”的德国、“越战”的越南、太平洋战争的日本、海湾战争的伊拉克等</p><p>在特殊的编码机制中，面貌模糊的“敌人”成为“绝对恶”的化身</p><p>与群体形式出现的恶相反，善大多以孤立的个体形象出现，在小群体中凸显自身差异性，彰显弥足珍贵的价值</p><h2 id="“重人轻事”：国家立场、人性论与身份危机"><a href="#“重人轻事”：国家立场、人性论与身份危机" class="headerlink" title="“重人轻事”：国家立场、人性论与身份危机"></a>“重人轻事”：国家立场、人性论与身份危机</h2><p>战争片两个基本叙事悖论：</p><ol><li>反战主题需通过正面的战争场面及效果表达出来，再现战争效果之目的在于表现反战的立场；</li><li>用国家之间激烈的利益争夺体现人类和平的普遍愿景，又需要在这种普遍愿景中传达具体国家的政治立场。</li></ol><p>“重人轻事”突出了叙事悖论与文化壁垒</p><p>电脑特技将古罗马历史质感和古希腊神圣光芒依美国意志一个个复原成视觉现实，观众进入“超真实”语境，影像的意识形态操纵更为容易。</p><p>战争片通过“异托帮‘（奇观、怪异的他者想象）、”恶托帮“（暴力、残忍等人性恶的他者叙述）、”乌托邦“（突出人性善的自我想象）进行善/恶的价值建构</p><h1 id="第八周-前苏联电影"><a href="#第八周-前苏联电影" class="headerlink" title="第八周 前苏联电影"></a>第八周 前苏联电影</h1><blockquote><p>本周观看《莫斯科不相信眼泪》</p></blockquote><p>苏联电影作为与美国好莱坞迥异的电影流派曾在世界影坛独树一帜</p><ul><li>1930年代引入</li><li>1950年代膜拜</li><li>1960年代批判</li><li>1980年代再度开启······</li></ul><p>苏联影片以其思想内容的鼓动性、电影语言的独创性，以及浓郁的文学诗意，形成了鲜明的民族美学特色，曾是对中国影响最大的外国电影</p><h1 id="第九周-印度电影"><a href="#第九周-印度电影" class="headerlink" title="第九周 印度电影"></a>第九周 印度电影</h1><blockquote><p>本周观看《三傻大闹宝莱坞》</p></blockquote><h2 id="印度电影特点"><a href="#印度电影特点" class="headerlink" title="印度电影特点"></a>印度电影特点</h2><ol><li> 音乐舞蹈元素丰富：印度电影中音乐和舞蹈常常是不可或缺的元素，甚至在电影中表达情感的方式也往往是通过歌舞来完成的。</li><li> 唯美风格：印度电影的场景和服装注重唯美和华丽，常常使用鲜艳的色彩和华美的场景来创造氛围。</li><li> 传统文化元素：印度电影对于传统文化的保护和传承十分重视，电影中常常出现传统文化元素，如印度古典舞蹈、以及宗教、民俗等元素。</li><li> 强烈的情感表达：印度电影中的情感表达往往是非常强烈的，有时会让人感到过于夸张。</li><li> 普及程度高：印度电影在印度社会中具有广泛的影响力，也受到海外印度人的喜爱，因此它的普及程度十分高，是印度文化的重要组成部分。</li></ol><h2 id="情节剧模式"><a href="#情节剧模式" class="headerlink" title="情节剧模式"></a>情节剧模式</h2><p>印度情节剧电影角色设置模式：</p><ul><li>男主分两种类型</li><li>女主分两种内容</li><li>影片中必有老年人物</li><li>固执、专制的父亲代表着传统秩序</li><li>宽容慈爱的母亲常常是国家的象征</li></ul><h2 id="类型化”马沙拉“"><a href="#类型化”马沙拉“" class="headerlink" title="类型化”马沙拉“"></a>类型化”马沙拉“</h2><p>”马沙拉“（masala)是印度菜肴中一种常用的调味品，是以各种香料混合而成的咖喱。</p><p>”马沙拉“影片指”一种将爱情、戏剧、打斗、歌舞、戏剧等类型分熔为一炉的‘大杂烩’电影”。</p><p>“马沙拉电影”确立了与好莱坞类型电影截然不同的一种民族化商业电影模式与大众美学形态。</p><h2 id="社会现实议题呈现"><a href="#社会现实议题呈现" class="headerlink" title="社会现实议题呈现"></a>社会现实议题呈现</h2><p>进入21世纪，“新概念印度电影”为扩大本国电影在国际上的传播与推广······</p><p>印度影片擅长将残酷的社会现实深植于影片内容中，节奏紧凑清晰，给人们充足的思考空间，广受国际关注。</p><p>印度电影在社会现实议题上的呈现十分具有前瞻性，如儿童议题《起跑线》、女性议题《摔跤吧爸爸》</p><h2 id="独特的印度民族舞蹈"><a href="#独特的印度民族舞蹈" class="headerlink" title="独特的印度民族舞蹈"></a>独特的印度民族舞蹈</h2><p>印度电影常通过歌舞间接传达欲望及男女之事</p><p>通过歌舞场面，印度的民族歌舞、宗教文化、民族服饰、传统礼仪得到了尽情展现、构成印度电影区别于其他民族电影的异域风情</p><h1 id="第十周-《万湖会议》"><a href="#第十周-《万湖会议》" class="headerlink" title="第十周 《万湖会议》"></a>第十周 《万湖会议》</h1><h1 id="十一周-世界艺术电影之都——法国电影"><a href="#十一周-世界艺术电影之都——法国电影" class="headerlink" title="十一周 世界艺术电影之都——法国电影"></a>十一周 世界艺术电影之都——法国电影</h1><blockquote><p>本周观看《最后一班地铁》，是一部由法国著名导演弗朗索瓦·特吕弗执导的电影，于1980年上映。电影的故事背景设定在二战期间，讲述了在战争中躲藏在地铁站的艺术家们的生活和爱情故事。</p><p>影片的主人公是一家小剧院的演员和导演卢卡斯，他的妻子是剧院的女主角，两人在地铁站中暂时躲避纳粹的迫害，并且继续排演着自己的戏剧，同时也经营着这个小剧院的生意。卢卡斯在地铁中遇到了年轻的爱德华，爱德华在地铁站戏剧上有了出色的表现，并且与公开反对新纳粹政权的卢卡斯建立了深厚的友谊。</p><p>影片围绕着卢卡斯，他的妻子和爱德华展开，融入了爱情、人性、艺术等多个元素，展现了他们在艰难环境中的坚强和勇敢。影片的拍摄手法运用到了特吕弗一贯的现实主义的风格，充分展现出了电影的真实感和强烈的情感表达</p></blockquote><p>所谓作者电影，即决定电影好坏的只能是电影的制作者——主要是导演，也就是特吕弗所倡导的导演中心论：将个人的主张和风格贯彻到自己的作品中，进行“个人化的表达”。</p><h2 id="法国“新浪潮”电影"><a href="#法国“新浪潮”电影" class="headerlink" title="法国“新浪潮”电影"></a>法国“新浪潮”电影</h2><ul><li>法国新浪潮电影运动指从1958年至1962年间，兴起于法国的新一代电影导演的电影观念和在此观念下涌现出来的一大批影片。</li><li>四年期间，至少97名导演拍摄了自己第一部故事片。专业人员和公众舆论大为震惊</li><li>新闻报刊大肆宣传四处加封“新浪潮”：从影片到导演、从大明星到影坛新秀。</li></ul><h2 id="法国电影的独有特色"><a href="#法国电影的独有特色" class="headerlink" title="法国电影的独有特色"></a>法国电影的独有特色</h2><h3 id="聚焦人物心理"><a href="#聚焦人物心理" class="headerlink" title="聚焦人物心理"></a>聚焦人物心理</h3><p>总的来说，法国电影注重艺术性和技术创新，强调对音像平衡的重视，探索现实生活中的人际关系和情感内核，喜剧类型电影以反讽的方式表达深层次的思想。法国电影在世界电影中具有较高的地位和独特的魅力。</p><h3 id="受限叙述视角"><a href="#受限叙述视角" class="headerlink" title="受限叙述视角"></a>受限叙述视角</h3><p>安德烈·巴赞是法国电影理论家、法国新浪潮电影之父</p><p>注重微观心理的叙事方式所体现出的文化逻辑与其它国家电影存在显著区别，构成法国电影竞争力的核心，使之在全球范围内拥有独特的影响力</p><h1 id="十二周-西班牙电影"><a href="#十二周-西班牙电影" class="headerlink" title="十二周 西班牙电影"></a>十二周 西班牙电影</h1><blockquote><p>本周观看《当你熟睡》</p></blockquote><p>对超现实主义手法运用自如，喜欢用隐喻、梦境、幻觉来揭示社会本质</p><p>善于把自己对现实的理解和认识用荒诞的情节表现出来</p><h2 id="卡洛斯·绍拉，西班牙著名导演"><a href="#卡洛斯·绍拉，西班牙著名导演" class="headerlink" title="卡洛斯·绍拉，西班牙著名导演"></a>卡洛斯·绍拉，西班牙著名导演</h2><ul><li>第一阶段：1959-1979年（佛朗哥统治时期及佛朗哥去世初期）</li><li>第二阶段：1980-1989年</li><li>第三阶段：1990年以后······</li></ul><p>1959—1979年，20年间绍拉执导13部影片</p><p>1980-1989年，绍拉的创作进入一个新阶段，内容和风格都起了很大的变化，脱去了隐喻外衣，直接表现了自己的情感</p><h2 id="阿莫多瓦"><a href="#阿莫多瓦" class="headerlink" title="阿莫多瓦"></a>阿莫多瓦</h2><p>与其它男性导演不同，阿莫多瓦始终关注着女性，以一种理解和关怀的姿态，细腻温情地刻画着女性敏感的精神世界</p><p>在阿莫多瓦影片看似荒诞的情节背后，隐藏着巨大的生活真实</p><p>他以嘲弄、戏谑的姿态甚至闹剧的形式，而对每一个普通观众讲述着一个个怪异可笑但发人深省的通俗故事</p><p>阿莫多瓦的电影具有深刻、严肃主题的同时，又存在着很强的观赏性和娱乐性</p><h2 id="独辟蹊径的21世纪西班牙电影"><a href="#独辟蹊径的21世纪西班牙电影" class="headerlink" title="独辟蹊径的21世纪西班牙电影"></a>独辟蹊径的21世纪西班牙电影</h2><p>20世纪1990年代开始，美国好莱坞电影对欧洲电影市场的垄断化日趋严重</p><p>而惊悚电影成为西班牙电影的标签之一，不断被世界电影市场认可</p><p>西班牙惊悚片的创作热潮起始于20世纪末</p><p>西班牙惊悚电影魅力何在？</p><ul><li>深挖人性，在边缘的镜像中摸爬滚打</li><li>不需要好莱坞大片的宏大叙事</li><li>西班牙电影钟情于边缘化的普通小人物，讲述他们的欲望和生死</li><li>加点血浆，再搅拌一些情欲佐料</li></ul><p>西班牙导演比美国血浆派导演聪明一些：懂得克制，如《死亡录像》</p><h2 id="西班牙电影特点"><a href="#西班牙电影特点" class="headerlink" title="西班牙电影特点"></a>西班牙电影特点</h2><ol><li>强调文化传承：西班牙电影十分注重本土文化与传统，经常为西班牙的缤纷文化与历史习惯添色不少。</li><li>黑色幽默：西班牙电影中普遍存在着一种黑色幽默的格调，常常带有一些悲剧性的元素。</li><li>色彩浓郁：西班牙电影通常采用颜色饱和度较高的镜头，强调视觉上的冲击力和美感。</li><li>讽刺性强：西班牙电影在处理社会问题或文化传统的时候经常采用讽刺的手法，以幽默的方式表达社会现实的不同面向。</li><li>电影类型多样化：西班牙电影的类型多种多样，涵盖了从喜剧到艺术片等多种不同类型。这些电影代表着不同的文化倾向和创作风格。</li></ol><h1 id="十三周-外国电视剧"><a href="#十三周-外国电视剧" class="headerlink" title="十三周 外国电视剧"></a>十三周 外国电视剧</h1><blockquote><p>本周观看《纸牌屋》</p></blockquote><p>20世纪90年代，VCD、DVD光盘由沿海至内地</p><h2 id="美剧、韩剧在中国的播出历程"><a href="#美剧、韩剧在中国的播出历程" class="headerlink" title="美剧、韩剧在中国的播出历程"></a>美剧、韩剧在中国的播出历程</h2><p>20世纪90年代，引进美剧</p><p>1992年，中韩正式建交</p><p>1993年，中国播出韩剧</p><h2 id="美剧、韩剧的吸睛路数"><a href="#美剧、韩剧的吸睛路数" class="headerlink" title="美剧、韩剧的吸睛路数"></a>美剧、韩剧的吸睛路数</h2><h3 id="美国电视剧类型"><a href="#美国电视剧类型" class="headerlink" title="美国电视剧类型"></a>美国电视剧类型</h3><p>肥皂剧、情景喜剧、情景系列剧、迷你电视剧、真人秀</p><h4 id="情景系列剧"><a href="#情景系列剧" class="headerlink" title="情景系列剧"></a>情景系列剧</h4><p>每年9月到次年4月为一个播出季</p><p>每周播出一集，每集60分钟</p><p>每集电视剧由：前情回顾、四幕主戏、尾声组成</p><p>按主题划分：医疗剧、犯罪悬疑剧、律政剧、科幻剧、青春剧</p><p>按每集之间的关联程度区分：连续剧、单元剧</p><h5 id="连续剧"><a href="#连续剧" class="headerlink" title="连续剧"></a>连续剧</h5><p>每集剧情相对独立，集与集之间情节有连续性 《越狱》《绝望的主妇》</p><h5 id="单元剧"><a href="#单元剧" class="headerlink" title="单元剧"></a>单元剧</h5><p>每集剧情为一个简短的、完全独立的故事，剧中主要人物固定不变 《犯罪现场调查》《别对我撒谎》</p><h3 id="韩国电视剧类型"><a href="#韩国电视剧类型" class="headerlink" title="韩国电视剧类型"></a>韩国电视剧类型</h3><p>银幕剧、迷你连续剧、连续剧、日日连续剧、肥皂剧</p><p>输入我国韩剧：迷你连续剧、连续剧、日日连续剧</p><h4 id="连续剧与日日连续剧"><a href="#连续剧与日日连续剧" class="headerlink" title="连续剧与日日连续剧"></a>连续剧与日日连续剧</h4><p>连续剧：集数50集左右，每集60分钟，每周播2集</p><p>日日连续剧：周末以外，每天播一集，总集数150集以上 《看了又看》</p><h4 id="迷你电视剧"><a href="#迷你电视剧" class="headerlink" title="迷你电视剧"></a>迷你电视剧</h4><p>每集60分钟，总集数16-20集，每周播2集</p><p>细分为：”月火剧’（每周一、周二播出） “水木剧”（每周三、周四播出）</p><p>迷你剧以偶像爱情剧为主</p><h2 id="美剧、韩剧的文化背景"><a href="#美剧、韩剧的文化背景" class="headerlink" title="美剧、韩剧的文化背景"></a>美剧、韩剧的文化背景</h2><h3 id="美剧文化的“普世”包装"><a href="#美剧文化的“普世”包装" class="headerlink" title="美剧文化的“普世”包装"></a>美剧文化的“普世”包装</h3><p>美剧体现着美国价值观，却不直白宣扬其主张······</p><p>带有“普世”包装的美剧可以轻松绕过比较敏感的政治意识话题，进入世界其他国家市场······</p><p>美剧即便带有明显的美国政治意识形态内容······</p><p>《生活大爆炸》《反恐24小时》</p><h3 id="韩剧文化的传统性与综合性"><a href="#韩剧文化的传统性与综合性" class="headerlink" title="韩剧文化的传统性与综合性"></a>韩剧文化的传统性与综合性</h3><h2 id="美剧与韩剧的表述策略"><a href="#美剧与韩剧的表述策略" class="headerlink" title="美剧与韩剧的表述策略"></a>美剧与韩剧的表述策略</h2><h3 id="两极人物与类型人物"><a href="#两极人物与类型人物" class="headerlink" title="两极人物与类型人物"></a>两极人物与类型人物</h3><p>美剧主要人物：普通平民、非常态环境中英雄人物（或远离日常生活的大人物）</p><p>韩剧人物塑造：类型化</p><p>韩剧人物设置：平民角色为主</p><h3 id="紧凑叙事与舒缓叙事"><a href="#紧凑叙事与舒缓叙事" class="headerlink" title="紧凑叙事与舒缓叙事"></a>紧凑叙事与舒缓叙事</h3><p>美剧叙事节奏“紧凑” 《吸血鬼日记》</p><p>韩剧叙事节奏“舒缓” 《看了又看》</p><h3 id="视听奇观与形式美感"><a href="#视听奇观与形式美感" class="headerlink" title="视听奇观与形式美感"></a>视听奇观与形式美感</h3><p>美剧注重营造“视听奇观”</p><p>韩剧强调画面</p><h3 id="情节制胜与以情动人"><a href="#情节制胜与以情动人" class="headerlink" title="情节制胜与以情动人"></a>情节制胜与以情动人</h3><p>韩剧强调“以情动人”</p><p>美剧强调“情节制胜”</p><p><strong>总的来说，美剧和韩剧在多个方面存在明显的差异。美剧通常拥有更高的制作成本，题材多样化、注重实境主义、情节紧凑，演员和制作人员更具专业性。韩剧以低制作成本著称，题材主要以浪漫爱情为主，注重情感描写和情节反复，并使用音乐元素作为画龙点睛的加分项。此外，美剧拍摄场景广泛、演员因角色技能被聘用，剧集时长通常为 20 到 24 集，每集时长 40<del>50 分钟左右；而韩剧则采用短制，整部剧集通常在 16</del>20 集左右，每集时长一般在 60 分钟以下。</strong></p><h2 id="《纸牌屋》与《大长今》"><a href="#《纸牌屋》与《大长今》" class="headerlink" title="《纸牌屋》与《大长今》"></a>《纸牌屋》与《大长今》</h2><h3 id="《纸牌屋》"><a href="#《纸牌屋》" class="headerlink" title="《纸牌屋》"></a>《纸牌屋》</h3><p>迎合审美需求，营造强情节叙事</p><p>关键词：政治、白宫、男性、权力斗争</p><p>《纸牌屋》成功三要素：喜欢BBC剧集的用户、导演大卫·芬奇的表演风格、演员凯文·史派西的表演</p><h3 id="《大长今》"><a href="#《大长今》" class="headerlink" title="《大长今》"></a>《大长今》</h3><ol><li>主题普世，其次，以食、医为题材，将“技”与“道”创造性联系在一起，富于民族性，最后，以爱情为辅佐，至真至纯融汇了爱情剧优势</li><li>场景唯美</li></ol><h1 id="十四周-世界十大著名导演之黑泽明"><a href="#十四周-世界十大著名导演之黑泽明" class="headerlink" title="十四周 世界十大著名导演之黑泽明"></a>十四周 世界十大著名导演之黑泽明</h1><blockquote><p>本周观看《罗生门》</p></blockquote><p>黑泽明，日本电影天皇</p><p>黑泽明电影对人道主义、 个人主义的思考，从现代意识出发，对日本传统文明现代物质文明所做的反思以及极具张力的影像美学的追求，改变了西方人认为日本文明是前现代文明的现象······</p><p>黑泽明一生导演31部电影，作品人物大体分为两种：铮铮铁汉（为被压迫者鸣不平的人物），代表各种恶的坏人</p><p>黑泽明追求的主题：表现“大丈夫气概”的人</p><p>“乱世”和”战争“环境是理解黑泽明的关键</p><p>黑泽明取得巨大成就的第原因：”认真“，苦读，重视剧本</p><p>”要像魔鬼那样细心！要像天使那样大胆！“——黑泽明座右铭</p><h2 id="著名影片"><a href="#著名影片" class="headerlink" title="著名影片"></a>著名影片</h2><ol><li>《罗生门》</li><li>《姿三四郎》</li><li>表现黑泽明人生观，讲出人性复杂的《活下去》</li><li>古装武打长篇巨制《七武士》</li><li>揭露上层政治集团贪腐《坏蛋睡的最香》</li><li>富于哲理的《影子武士》</li><li>高踞苍穹俯视人间悲剧的《乱》（“我想以苍穹俯视人类所作所为的手法拍摄此片。”）</li></ol><p>黑泽明的电影之所以受到全世界的欢迎，“是由于他的作品有着强烈的主体性、栩栩如生的人物和超群的电影技巧”——日本当代著名电影评论家、电影史学家佐藤忠男</p><h2 id="会绘制分镜头（油画）"><a href="#会绘制分镜头（油画）" class="headerlink" title="会绘制分镜头（油画）"></a>会绘制分镜头（油画）</h2><p>黑泽明是一位注重社会问题呈现、善于运用自然元素和注重象征意义的导演。他的电影常常涉及到人性、文化、历史等方面，以及个体在社会中的角色和处境。此外，他在摄影技巧方面也有很高的创新性，常常运用情感冲突和人物关系来探讨个体的情感世界。</p><h1 id="十五周-德国导演法斯宾德"><a href="#十五周-德国导演法斯宾德" class="headerlink" title="十五周 德国导演法斯宾德"></a>十五周 德国导演法斯宾德</h1><blockquote><p>本周观看《玛丽亚布劳恩的婚姻》</p></blockquote><p>过度劳累→睡眠问题→药过量致死</p><p>富有侵略性，缺乏认同感，自毁倾向。（每天只睡2-3小时，酗酒，嗑药）</p><p>“新德国电影运动的心脏”</p><p>“新德国电影最有成果的天才”</p><p>集导演、编剧、制片、演员、摄影、剪辑、作曲于一身</p><ul><li>1940年代中期道50年代中期意大利“新现实主义”电影</li><li>1950年代末到60年代中期法国“新浪潮”电影</li><li>1960年代初期崛起“新德国电影”</li></ul><p>“新德国电影”发源于1962年2月，奥博豪森第八届西德短片电影节，26位青年导演、编剧、演员在亚历山大·克鲁格倡导下发表《奥博豪森宣言》</p><p>法斯宾德通过《电影手册》、《画面与音响》杂志等，以及观看别人剪辑影片，了解剪片技术。</p><p>“我利用那里的一张剪辑台，仅用了一天时间便学会了剪片技术。”——法斯宾德</p><p>1966年，法斯宾德报考柏林电影学院，未被录取，创立“反戏剧”剧团（当时最突出的先锋派剧团）</p><p>稳定的团体为低成本高效率怕拍电影提供了保证</p><p>1969年4月，花费9万5千马克，24天，拍摄出《爱比死更冷酷》</p><p>影片《卡策马赫尔》，1969年10月，西德曼海姆电影节获奖：电影评论奖、德国表演艺术科学院奖</p><p>1970年，影片获五项联邦电影奖：最佳影片、最佳剧本、最佳导演、最佳男演员、最佳摄影奖</p><blockquote><p>“看过《卡策马赫尔》之后可以断言，法斯宾德是一个真正伟大的天才。他在戈达尔与施特劳普斯所做出的开创性业绩的基础上，正开拓着新的天地。”——《画面与音响》记者</p></blockquote><p>1969之1970年，短短两年时间，导演了八部故事片和三部电视片</p><h2 id="绝望主题"><a href="#绝望主题" class="headerlink" title="绝望主题"></a>绝望主题</h2><p>《玛丽亚·布劳恩的婚姻》《莉莉·玛莲》《罗拉》</p><h2 id="离间效果"><a href="#离间效果" class="headerlink" title="离间效果"></a>离间效果</h2><p>法斯宾德拍的是“好莱坞式的德国电影”</p><p>法斯宾德没有忘记电影应有的思辨性和批判性，在把电影定位于商业片的同时又追求电影的艺术性。</p><p>既避免了法国新浪潮电影排斥叙事、过于主现代化的弊端，使影片具有完美艺术性和观赏性，又使影片具有深刻的思辨性。</p><blockquote><p>“我想拍的使这样一种德国电影，它尽管也具备好莱坞的特性，但是不像它那样虚假骗人，它们应该同时是能够对体制进行批判的电影。”</p></blockquote><h2 id="象征手法"><a href="#象征手法" class="headerlink" title="象征手法"></a>象征手法</h2><p>受传统德国电影风格——室内剧影响</p><p>法斯宾德影片内景独特</p><h1 id="十六周-加拿大好莱坞电影导演詹姆斯·卡梅隆"><a href="#十六周-加拿大好莱坞电影导演詹姆斯·卡梅隆" class="headerlink" title="十六周 加拿大好莱坞电影导演詹姆斯·卡梅隆"></a>十六周 加拿大好莱坞电影导演詹姆斯·卡梅隆</h1><blockquote><p>本周观看《终结者2》</p></blockquote><p>伟大的商业巨匠、卓越的电影作者、富有创造力的技术革命家 三者的结合，他的电影充斥着技术主义下的人文反思</p><p>《泰坦尼克号》荣获11项奥斯卡金像奖，卡梅隆一人独得三奖：最佳影片奖、最佳导演奖、最佳剪辑奖</p><p>好莱坞电影的一个根本特点是：大不真实而细节高度真实，从而使观众在观赏过程中沉迷不醒，意识失控，以假为真。</p><h2 id="叙事探析：卡梅隆电影的主题"><a href="#叙事探析：卡梅隆电影的主题" class="headerlink" title="叙事探析：卡梅隆电影的主题"></a>叙事探析：卡梅隆电影的主题</h2><p>将社会问题意识和类型书写规范嫁接在一起</p><h3 id="动作主题：牺牲与救赎"><a href="#动作主题：牺牲与救赎" class="headerlink" title="动作主题：牺牲与救赎"></a>动作主题：牺牲与救赎</h3><p>浪漫情怀的英雄主义包装下的现实主义</p><h3 id="人物主题：强势女杰"><a href="#人物主题：强势女杰" class="headerlink" title="人物主题：强势女杰"></a>人物主题：强势女杰</h3><p>人是不完美的，电影要表现人的真实，就要表现人的不完美</p><h3 id="时空主题：太空、深海、未来"><a href="#时空主题：太空、深海、未来" class="headerlink" title="时空主题：太空、深海、未来"></a>时空主题：太空、深海、未来</h3><h2 id="技术探析：卡梅隆的手段与方法"><a href="#技术探析：卡梅隆的手段与方法" class="headerlink" title="技术探析：卡梅隆的手段与方法"></a>技术探析：卡梅隆的手段与方法</h2><ol><li>模型制作的技术突破</li><li>水下拍摄的技术突破</li><li>数字领域的技术突破</li></ol><p>卡梅隆认为，好奇心是他最好的老师</p><blockquote><p>“在艺术和探险中，失败必定是个选项，因为这些都需要敢于挑战的信心。没有哪个需要创新的工作是在没有风险的条件下完成的。你必须愿意承担这些风险。无论你做什么，失败都是其中一个选项，但畏惧不是。”——詹姆斯·卡梅隆</p></blockquote><h2 id="《阿凡达》特点"><a href="#《阿凡达》特点" class="headerlink" title="《阿凡达》特点"></a>《阿凡达》特点</h2><ol><li>高科技视觉效果：《阿凡达》是一部由詹姆斯·卡梅隆导演的科幻电影，它使用了最新的视觉特技技术，特别是3D成像技术，让观众能够更加真实地沉浸在电影中。</li><li>虚构的世界观：影片中的潘多拉星球是一个虚拟的世界，这个世界的各种生物，植被和文化都是由影片的创作者原创的，这为影片带来了独特的艺术价值。</li><li>强烈的环境保护主题：电影中描绘了人类企图开采潘多拉星球想要得到“不可得”资源的故事，强调了对环境的保护，以及人类与自然和谐共生的重要性。</li><li>多元文化感：影片中的纳美族文化与现代工业化的人类社会形成对比，并呈现一种关于不同文化之间相互理解、相互融合的渴望，以及对多元文化之美的讴歌。</li><li>借鉴历史事件：电影创作灵感来源于美国殖民历史，饱含了对欧美殖民主义侵略的谴责，借此向过往的历史事件发出深刻的思考和反省。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;类型电影是美国的主流&lt;/p&gt;
&lt;p&gt;艺术电影（如星际穿越）：社会写实风格，呈现导演个人思考，注重主角的思想而非故事&lt;/p&gt;
&lt;p&gt;类型电影（如战狼，流浪地球）：比现实世界更丰富，有保证的快感，商业社会&lt;/p&gt;
&lt;h1 id=&quot;第一周&quot;&gt;&lt;a href=&quot;#第一周&quot; clas</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="电影" scheme="http://cdt3211.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
    <category term="笔记" scheme="http://cdt3211.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python期末笔记</title>
    <link href="http://cdt3211.github.io/2023/10/22/python%E7%AC%94%E8%AE%B0/"/>
    <id>http://cdt3211.github.io/2023/10/22/python%E7%AC%94%E8%AE%B0/</id>
    <published>2023-10-22T08:31:53.000Z</published>
    <updated>2023-10-26T12:26:57.429Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>期末总成绩=过程成绩(作业，考勤，上机)*50%+期末考试(闭卷机考) *50%</p></blockquote><h1 id="一、Python概述"><a href="#一、Python概述" class="headerlink" title="一、Python概述"></a>一、Python概述</h1><h2 id="1-计算机与程序设计"><a href="#1-计算机与程序设计" class="headerlink" title="1.计算机与程序设计"></a>1.计算机与程序设计</h2><h3 id="计算机的概念"><a href="#计算机的概念" class="headerlink" title="计算机的概念"></a>计算机的概念</h3><p><strong>计算机是根据指令操作数据的设备</strong>，具有功能性和可编程性</p><h3 id="计算机的发展"><a href="#计算机的发展" class="headerlink" title="计算机的发展"></a>计算机的发展</h3><p><strong>计算机的发展参照摩尔定律，表现为指数方式</strong></p><p><strong>摩尔定律：单位面积集成电路上可容纳晶体管的数量每两年翻一番</strong></p><h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><p><strong>程序设计是计算机可编程性的体现</strong></p><h3 id="程序设计语言"><a href="#程序设计语言" class="headerlink" title="程序设计语言"></a>程序设计语言</h3><p><strong>程序设计语言是一种用于交互（交流）的人造语言</strong></p><h2 id="2-编译和解释"><a href="#2-编译和解释" class="headerlink" title="2.编译和解释"></a>2.编译和解释</h2><h3 id="编程语言的执行方式"><a href="#编程语言的执行方式" class="headerlink" title="编程语言的执行方式"></a>编程语言的执行方式</h3><p><strong>计算机执行源程序的两种方式：编译和解释</strong></p><p>源代码：人类可读</p><p>目标代码：计算机可直接执行，人类不可读</p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p><strong>将源代码一次性转换为目标代码的过程</strong></p><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p><strong>将源代码逐条转换成目标代码同时逐条运行的过程</strong></p><p>每次程序运行时随翻译随执行</p><h3 id="静态语言和脚本语言"><a href="#静态语言和脚本语言" class="headerlink" title="静态语言和脚本语言"></a>静态语言和脚本语言</h3><p><strong>根据执行方式不同，编程语言分为两类</strong></p><p><strong>执行方式不同，优势各有不同</strong></p><p>静态语言：使用编译执行，一次性生成目标代码，优化更充分，程序运行速度更快，c,c++,java</p><p>脚本语言：使用解释执行，执行程序时需要源代码，维护更灵活，跨多个操作系统平台，python,javascript,PHP</p><h2 id="3-程序的基本编写方法"><a href="#3-程序的基本编写方法" class="headerlink" title="3.程序的基本编写方法"></a>3.程序的基本编写方法</h2><h3 id="IPO"><a href="#IPO" class="headerlink" title="IPO"></a>IPO</h3><p>I：input输入</p><p>P：process处理，程序的主要逻辑，处理方法成为算法，是灵魂</p><p>O：output输出，程序的输出</p><h3 id="问题的计算部分"><a href="#问题的计算部分" class="headerlink" title="问题的计算部分"></a>问题的计算部分</h3><p><strong>一个待解决问题中，可以用程序辅助完成的部分</strong></p><p>一个问题可能有多种角度理解，产生不同的计算部分</p><h3 id="求解计算问题的精简步骤"><a href="#求解计算问题的精简步骤" class="headerlink" title="求解计算问题的精简步骤"></a>求解计算问题的精简步骤</h3><p>确定IPO：明确计算部分及功能边界</p><p>编写程序：将计算求解的设计变成现实</p><p>调试程序：确保程序按照正确的逻辑能正确运行</p><h2 id="4-Python特点"><a href="#4-Python特点" class="headerlink" title="4.Python特点"></a>4.Python特点</h2><p>可移植、可升级、可扩展</p><p>健壮性、解释性、编译型</p><p>易学、易读、易维护</p><p>内存管理器</p><p>高级、面向对象</p><p>快速原型开发工具</p><h1 id="二、python基础"><a href="#二、python基础" class="headerlink" title="二、python基础"></a><strong>二、python基础</strong></h1><h2 id="1-基础语法"><a href="#1-基础语法" class="headerlink" title="1.基础语法"></a><strong>1.基础语法</strong></h2><h3 id="续行"><a href="#续行" class="headerlink" title="续行"></a><strong>续行</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> signal==<span class="hljs-string">&#x27;red&#x27;</span><span class="hljs-keyword">and</span>\\<br>car==<span class="hljs-string">&#x27;moving&#x27;</span><br></code></pre></td></tr></table></figure><p>无需续行符可直接换行的两种情况：</p><p>1.小括号、中括号、花括号的内部可以多行书写</p><p>2.三引号包括下的字符串也可以跨行书写</p><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a><strong>缩进</strong></h3><p>增加缩进表示语句块的开始</p><p>Python用相同的缩进表示同级别语句块</p><p>减少缩进表示语句块的退出</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a><strong>变量</strong></h2><p>在python中，不需要事先声明变量名及其类型，直接赋值即可创建各种类型的对象变量。这一点适用于python任意类型的对象。</p><p><strong>python中的变量并不直接存储值，而是存储了值的内存地址或者引用</strong>，这也是变量类型随时可以改变的原因。</p><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>-首字符是字母或下划线</p><p>-其余可以是字母、下划线、数字</p><p>-<strong>大小写敏感</strong></p><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261708412.png" alt="image-20231026170718170"></p><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h2><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><p>-python<strong>支持任意大</strong>的数字，具体仅受内存大小的限制</p><p>-<strong>应尽量避免在实数之间直接进行相等性测试</strong></p><p>在数字的算术表达式求值时会进行<strong>隐式的类型转换</strong></p><h2 id="3-基本运算"><a href="#3-基本运算" class="headerlink" title="3.基本运算"></a>3.基本运算</h2><p><strong>Python不支持++和–运算符</strong></p><h3 id="类型转换与类型判断"><a href="#类型转换与类型判断" class="headerlink" title="类型转换与类型判断"></a>类型转换与类型判断</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261731092.png" alt="image-20231026173110032"></p><h3 id="第三方库不考"><a href="#第三方库不考" class="headerlink" title="第三方库不考"></a>第三方库不考</h3><h2 id="函数（实现相应功能也可）"><a href="#函数（实现相应功能也可）" class="headerlink" title="函数（实现相应功能也可）"></a>函数（实现相应功能也可）</h2><h1 id="三、Python序列结构"><a href="#三、Python序列结构" class="headerlink" title="三、Python序列结构"></a>三、Python序列结构</h1><h2 id="1-序列"><a href="#1-序列" class="headerlink" title="1.序列"></a>1.序列</h2><p><strong>序列是具有先后关系的一组元素</strong></p><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261738637.png" alt="image-20231026173801422"></p><h3 id="序列类型转换函数（去年考）"><a href="#序列类型转换函数（去年考）" class="headerlink" title="序列类型转换函数（去年考）"></a>序列类型转换函数（去年考）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt;&gt;<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;Hello, World!&#x27;</span>)<br>[<span class="hljs-string">&#x27;H&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;,&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;!&#x27;</span>]<br>&gt;&gt;&gt;<span class="hljs-built_in">tuple</span>(hello, world!)<br> (<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;,&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;!&#x27;</span>)<br>&gt;&gt;&gt;<span class="hljs-built_in">str</span>([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<br><span class="hljs-string">&#x27;[1,2,3]&#x27;</span><br>&gt;&gt;&gt;aStr=<span class="hljs-string">&#x27;Hello, World&#x27;</span><br>&gt;&gt;&gt;<span class="hljs-built_in">len</span>(aStr)<br><span class="hljs-number">13</span><br>&gt;&gt;&gt;<span class="hljs-built_in">sorted</span>(aStr)<br>[<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;!&#x27;</span>,<span class="hljs-string">&#x27;,&#x27;</span>,<span class="hljs-string">&#x27;H&#x27;</span>,<span class="hljs-string">&#x27;W&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>]<br></code></pre></td></tr></table></figure><h2 id="2-列表（参照实验复习）"><a href="#2-列表（参照实验复习）" class="headerlink" title="2.列表（参照实验复习）"></a>2.列表（参照实验复习）</h2><h3 id="列表类型定义"><a href="#列表类型定义" class="headerlink" title="列表类型定义"></a>列表类型定义</h3><p><code>ls=[1,2,3,&#39;a&#39;]</code></p><p><strong>方括号[]真正创建一个列表，赋值仅传递引用</strong></p><h3 id="列表常用方法"><a href="#列表常用方法" class="headerlink" title="列表常用方法"></a>列表常用方法</h3><p><strong>‘方法’在编程中是一个专有名词</strong></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261748601.png" alt="image-20231026174818512"></p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串属于不可变序列，不能直接对字符串对象进行元素增加、修改与删除操作<img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261750895.png" alt="image-20231026175024857"></p><h3 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h3><p><strong>str.format()函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt;&gt;<span class="hljs-string">&quot;&#123;&#125;&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;hello&#x27;</span>,<span class="hljs-string">&#x27;world&#x27;</span>)<span class="hljs-comment">#不设置指定位置，按默认顺序&#x27;hello world&#x27;</span><br>&gt;&gt;&gt;<span class="hljs-string">&quot;&#123;0&#125;&#123;1&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>)<span class="hljs-comment">#设置指定位置&#x27;hello world&#x27;</span><br>&gt;&gt;&gt;<span class="hljs-string">&quot;&#123;1&#125;&#123;0&#125;&#123;1&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>)<span class="hljs-comment">#设置指定位置&#x27;world hello world&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="用format函数格式化字符串"><a href="#用format函数格式化字符串" class="headerlink" title="用format函数格式化字符串"></a>用format函数格式化字符串</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261755264.png" alt="image-20231026175536182"></p><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p><strong>字典中键是不可变数据类型</strong></p><h3 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261758649.png" alt="image-20231026175849562"></p><h3 id="字典的基本操作"><a href="#字典的基本操作" class="headerlink" title="字典的基本操作"></a>字典的基本操作</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261822777.png" alt="image-20231026182217699"></p><h3 id="字典方法"><a href="#字典方法" class="headerlink" title="字典方法"></a>字典方法</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261823248.png" alt="image-20231026182310165"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261823923.png" alt="image-20231026182321830"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261825881.png" alt="image-20231026182537442"></p><h2 id="6-集合"><a href="#6-集合" class="headerlink" title="6.集合"></a>6.集合</h2><p>集合中只能包含数字、字符串、元组等<strong>不可变类型</strong>（或者说<strong>可哈希</strong>）的数据，而不能包含列表、字典、集合等可变类型的数据</p><h3 id="集合的创建"><a href="#集合的创建" class="headerlink" title="集合的创建"></a>集合的创建</h3><p>使用大括号{}或set()创建，元素间用逗号分隔</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt;&gt;A=&#123;<span class="hljs-string">&quot;python&quot;</span>,<span class="hljs-number">123</span>,(<span class="hljs-string">&quot;python&quot;</span>,<span class="hljs-number">123</span>)&#125;<br>&#123;(<span class="hljs-string">&#x27;python&#x27;</span>,<span class="hljs-number">123</span>),<span class="hljs-number">123</span>,<span class="hljs-string">&#x27;python&#x27;</span>&#125;<br>&gt;&gt;&gt;B=<span class="hljs-built_in">set</span>(<span class="hljs-string">&quot;python123&quot;</span>)<br>&#123;<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="集合关系运算"><a href="#集合关系运算" class="headerlink" title="集合关系运算"></a>集合关系运算</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261831428.png" alt="image-20231026183157357"></p><h1 id="四、程序控制结构"><a href="#四、程序控制结构" class="headerlink" title="四、程序控制结构"></a>四、程序控制结构</h1><h2 id="1-条件表达式"><a href="#1-条件表达式" class="headerlink" title="1.条件表达式"></a>1.条件表达式</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261833017.png" alt="image-20231026183347981"></p><h3 id="条件组合"><a href="#条件组合" class="headerlink" title="条件组合"></a>条件组合</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261834635.png" alt="image-20231026183411602"></p><h3 id="条件判断及组合"><a href="#条件判断及组合" class="headerlink" title="条件判断及组合"></a>条件判断及组合</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261834937.png" alt="image-20231026183449895"></p><h2 id="2-选择结构"><a href="#2-选择结构" class="headerlink" title="2.选择结构"></a>2.选择结构</h2><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261836941.png" alt="image-20231026183654888"></p><h2 id="3-异常处理"><a href="#3-异常处理" class="headerlink" title="3.异常处理"></a>3.异常处理</h2><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261838463.png" alt="image-20231026183831420"></p><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261839447.png" alt="image-20231026183900392"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261839783.png" alt="image-20231026183923635"></p><h3 id="异常处理结构"><a href="#异常处理结构" class="headerlink" title="异常处理结构"></a>异常处理结构</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment">#可能会引发异常的代码，先执行一下试试</span><br><span class="hljs-keyword">except</span> Exception[<span class="hljs-keyword">as</span> reason]:<br>    <span class="hljs-comment">#如果try中的代码抛出异常并被except捕捉，就执行这里的代码</span><br></code></pre></td></tr></table></figure><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261928159.png" alt="image-20231026192852099"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment">#可能会引发异常的代码</span><br><span class="hljs-keyword">except</span> Exception[<span class="hljs-keyword">as</span> reason]:<br>    <span class="hljs-comment">#用来处理异常的代码</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-comment">#如果try子句中的代码没有引发异常，就继续执行这里的代码</span><br></code></pre></td></tr></table></figure><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261930823.png" alt="image-20231026193018769"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment">#可能会引发异常的代码</span><br><span class="hljs-keyword">except</span> Exception[<span class="hljs-keyword">as</span> reason]:<br>    <span class="hljs-comment">#用来处理异常的代码</span><br><span class="hljs-keyword">finally</span>:<br>    <span class="hljs-comment">#无论try子句中的代码是否引发异常，都会执行这里的代码</span><br></code></pre></td></tr></table></figure><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261931616.png" alt="image-20231026193148565"></p><h2 id="4-循环结构"><a href="#4-循环结构" class="headerlink" title="4.循环结构"></a>4.循环结构</h2><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261932588.png" alt="image-20231026193220519"></p><p>break:跳出循环</p><p>continue:跳过循环这一轮剩下的语句进入下一轮</p><h3 id="循环中的else子句（看缩进）"><a href="#循环中的else子句（看缩进）" class="headerlink" title="循环中的else子句（看缩进）"></a>循环中的else子句（看缩进）</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261935621.png" alt="image-20231026193532538"></p><p>这里的else是对应的第9行的语句，而不是11行的</p><h3 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261936812.png" alt="image-20231026193642734"></p><h1 id="五、函数"><a href="#五、函数" class="headerlink" title="五、函数"></a>五、函数</h1><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261938715.png" alt="image-20231026193819669"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span>&lt;函数名&gt;(&lt;参数 (<span class="hljs-number">0</span>个或多个)&gt;):<br>    &lt;函数体&gt;<br>    <span class="hljs-keyword">return</span>&lt;返回值&gt;<br></code></pre></td></tr></table></figure><h2 id="1-自定义函数"><a href="#1-自定义函数" class="headerlink" title="1.自定义函数"></a>1.自定义函数</h2><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261940404.png" alt="image-20231026194047331"></p><p>如果函数中没有return语句或者return语句不带任何返回值，那么该函数的返回值为<code>None</code></p><h2 id="2-函数参数"><a href="#2-函数参数" class="headerlink" title="2.函数参数"></a>2.函数参数</h2><h3 id="位置参数"><a href="#位置参数" class="headerlink" title="位置参数"></a>位置参数</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261943519.png" alt="image-20231026194313455"></p><h3 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261943610.png" alt="image-20231026194338486"></p><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261945579.png" alt="image-20231026194503510"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261946448.png" alt="image-20231026194602375"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261946229.png" alt="image-20231026194633024"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261949197.png" alt="image-20231026194904131"></p><h2 id="可变长度参数"><a href="#可变长度参数" class="headerlink" title="可变长度参数"></a>可变长度参数</h2><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261950583.png" alt="image-20231026195031498"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261951186.png" alt="image-20231026195119116"></p><h3 id="传递参数时的序列解包"><a href="#传递参数时的序列解包" class="headerlink" title="传递参数时的序列解包"></a>传递参数时的序列解包</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261951535.png" alt="image-20231026195153453"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261953012.png" alt="image-20231026195259949"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261953620.png" alt="image-20231026195342537"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261957467.png" alt="image-20231026195719384"></p><h3 id="传递函数"><a href="#传递函数" class="headerlink" title="传递函数"></a>传递函数</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310261957789.png" alt="image-20231026195758738"></p><h3 id="lambda函数"><a href="#lambda函数" class="headerlink" title="lambda函数"></a>lambda函数</h3><p>-lambda函数是一种匿名函数，即没有名字的函数</p><p>-使用lambda保留字定义，函数名是返回结果</p><p>-lambda函数用于定义简单的，能够在一行内表示的函数</p><p>-匿名函数：只可以包含一个表达式，该表达式的计算结果可以看作是函数的返回值，不允许包含复合语句，但在表达式中可以调用其他函数</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262000342.png" alt="image-20231026200054268"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262001733.png" alt="image-20231026200107675"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262001411.png" alt="image-20231026200149334"></p><h2 id="3-变量作用域"><a href="#3-变量作用域" class="headerlink" title="3.变量作用域"></a>3.变量作用域</h2><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262002237.png" alt="image-20231026200234175"></p><h3 id="同名变量"><a href="#同名变量" class="headerlink" title="同名变量"></a>同名变量</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262002402.png" alt="image-20231026200255350"></p><h3 id="global语句"><a href="#global语句" class="headerlink" title="global语句"></a>global语句</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262003947.png" alt="image-20231026200354899"></p><h3 id="局部变量为组合数据类型"><a href="#局部变量为组合数据类型" class="headerlink" title="局部变量为组合数据类型"></a>局部变量为组合数据类型</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262004448.png" alt="image-20231026200440398"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262004473.png" alt="image-20231026200459415"></p><h1 id="六、文件及文件操作"><a href="#六、文件及文件操作" class="headerlink" title="六、文件及文件操作"></a>六、文件及文件操作</h1><h2 id="1-文件的类型"><a href="#1-文件的类型" class="headerlink" title="1.文件的类型"></a>1.文件的类型</h2><h3 id="文件的理解"><a href="#文件的理解" class="headerlink" title="文件的理解"></a>文件的理解</h3><p>-<strong>文件是数据的抽象和集合</strong></p><p>-文件是存储在辅助存储器上的数据序列</p><p>-文件是数据存储的一种形式</p><p>-文件的展现形态：<strong>文本文件</strong>和<strong>二进制文件</strong></p><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><h4 id="按文件中数据的组织形式把文件分为文本文件和二进制文件"><a href="#按文件中数据的组织形式把文件分为文本文件和二进制文件" class="headerlink" title="按文件中数据的组织形式把文件分为文本文件和二进制文件"></a>按文件中数据的<strong>组织形式</strong>把文件分为文本文件和二进制文件</h4><p>-<strong>文本文件</strong>：文本文件存储的是常规<strong>字符串</strong>，由若干文本行组成，通常每行以换行符’\n’结尾。<strong>常规字符串是指记事本或其它文本编辑器能正常显示、编辑并且人类能够直接阅读和理解的字符串</strong>，如英文字母、汉字、数字字符串。文本文件可以使用字处理软件如gedit、记事本进行编辑。</p><p>-<strong>二进制文件</strong>：二进制文件把对象内容以<strong>字节串(bytes)<strong>进行存储，无法用记事本或其它普通字处理软件直接进行编辑，通常也无法被人类直接阅读和理解，</strong>需要使用专门的软件</strong>进行解码后 读取、显示、修改或执行。常见的如图形图像文件、音视频文件、可执行文件、资源文件、各种数据库文件、各类office文档等都属于二进制文件。</p><h2 id="2-文件的相关操作"><a href="#2-文件的相关操作" class="headerlink" title="2.文件的相关操作"></a>2.文件的相关操作</h2><h3 id="文件的打开"><a href="#文件的打开" class="headerlink" title="文件的打开"></a>文件的打开</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262014741.png" alt="image-20231026201448684"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262014330.png" alt="image-20231026201431225"></p><h3 id="open-函数-mode"><a href="#open-函数-mode" class="headerlink" title="open()函数-mode"></a>open()函数-mode</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262015674.png" alt="image-20231026201511596"></p><h3 id="打开模式的总结"><a href="#打开模式的总结" class="headerlink" title="打开模式的总结"></a>打开模式的总结</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262015865.png" alt="image-20231026201531812"></p><h3 id="文件相关函数"><a href="#文件相关函数" class="headerlink" title="文件相关函数"></a>文件相关函数</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262017402.png" alt="image-20231026201706347"></p><h3 id="文件的写入"><a href="#文件的写入" class="headerlink" title="文件的写入"></a>文件的写入</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262017877.png" alt="image-20231026201737831"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262017062.png" alt="image-20231026201748998"></p><h3 id="上下文管理器with语句"><a href="#上下文管理器with语句" class="headerlink" title="上下文管理器with语句"></a>上下文管理器with语句</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262018250.png" alt="image-20231026201825147"></p><h3 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262018550.png" alt="image-20231026201857505"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262019732.png" alt="image-20231026201905673"></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262020222.png" alt="image-20231026202006132"></p><h3 id="其它文件相关函数"><a href="#其它文件相关函数" class="headerlink" title="其它文件相关函数"></a>其它文件相关函数</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202310262020394.png" alt="image-20231026202036312"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;期末总成绩=过程成绩(作业，考勤，上机)*50%+期末考试(闭卷机考) *50%&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、Python概述&quot;&gt;&lt;a href=&quot;#一、Python概述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="python" scheme="http://cdt3211.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>计组期中考点</title>
    <link href="http://cdt3211.github.io/2023/10/22/%E8%AE%A1%E7%BB%84%E6%9C%9F%E4%B8%AD%E8%80%83%E7%82%B9/"/>
    <id>http://cdt3211.github.io/2023/10/22/%E8%AE%A1%E7%BB%84%E6%9C%9F%E4%B8%AD%E8%80%83%E7%82%B9/</id>
    <published>2023-10-22T08:07:08.000Z</published>
    <updated>2023-11-11T14:33:22.336Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>复习以PPT+平时作业为主</p><p>应用题：4选2</p><p>①最终总成绩100%=期末50%+其他成绩50%。</p><p>②其中其他成绩100%=<strong>期中30%</strong>+（作业+实验）50%+考勤20%。</p></blockquote><h1 id="第一章-计算机系统概述"><a href="#第一章-计算机系统概述" class="headerlink" title="第一章 计算机系统概述"></a>第一章 计算机系统概述</h1><h2 id="导入：现实与计算机中的运算结果有差异"><a href="#导入：现实与计算机中的运算结果有差异" class="headerlink" title="导入：现实与计算机中的运算结果有差异"></a>导入：现实与计算机中的运算结果有差异</h2><p>理解程序的执行结果要从系统层面考虑</p><p>高级语言语句都要转换为机器指令才能在计算机上执行</p><p>计算机系统是模运算系统，字长有限，高位被丢弃</p><p>运算器不知道参加运算的是带符号数还是无符号数</p><p>访问内存需要几十到几百个时钟，访问磁盘需要几百万个时钟</p><p>进程具有独立的逻辑控制流和独立的地址空间</p><p>过程调用使用栈存放参数和局部变量，递归过程有大量额外指令，增加时间开销，并可能发生栈溢出</p><h2 id="计算机系统抽象层次：ISA（指令集体系结构）"><a href="#计算机系统抽象层次：ISA（指令集体系结构）" class="headerlink" title="计算机系统抽象层次：ISA（指令集体系结构）"></a>计算机系统抽象层次：ISA（指令集体系结构）</h2><p>程序执行结果不仅取决于算法、程序编写，而且取决于语言处理系统、操作系统、ISA、微体系结构</p><h2 id="冯诺依曼结构"><a href="#冯诺依曼结构" class="headerlink" title="冯诺依曼结构"></a>冯诺依曼结构</h2><p>第一台冯诺依曼机-IAS计算机</p><ol><li><p>采用“存储程序”工作方式</p></li><li><p>运算器、控制器、存储器、输入设备和输出设备五个基本部件组成</p><ul><li><p>存储器存放数据和指令</p></li><li><p>控制器取出指令执行</p></li><li><p>运算器进行加减乘除基本运算，也可以进行一些逻辑运算和附加运算</p></li><li><p>输入设备、输出设备与主机通信</p></li></ul></li><li><p>内部以二进制表示指令和数据，每条指令由操作码和地址码两部分组成。操作码指出操作类型，地址码指出操作地址，由一串指令组成程序。</p></li></ol><p>早期计算机以运算器为中心，效率低下</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311101757681.png" alt="image-20231110175748162"></p><p>现在的计算机以存储器为中心</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311101758885.png" alt="image-20231110175804142"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311101759667.png" alt="image-20231110175941631"></p><h2 id="计算机是如何工作的，及各种缩写"><a href="#计算机是如何工作的，及各种缩写" class="headerlink" title="计算机是如何工作的，及各种缩写"></a>计算机是如何工作的，及各种缩写</h2><ul><li>CU：控制器</li><li>ALU：算术逻辑部件</li><li>CPU：中央处理器</li><li>GPRs：通用寄存器组</li><li>MDR：存储数据寄存器</li><li>PC：程序计数器</li><li>MAR：存储器地址寄存器</li><li>IR：指令寄存器</li></ul><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311101802263.png" alt="image-20231110180234204"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111403787.png" alt="image-20231111140351701"></p><p>8位模型机M：8位定长指令字，4个GPR，16个主存单元</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111408976.png" alt="image-20231111140849915"></p><h2 id="各编程语言：机器指令、汇编指令、机器级指令"><a href="#各编程语言：机器指令、汇编指令、机器级指令" class="headerlink" title="各编程语言：机器指令、汇编指令、机器级指令"></a>各编程语言：机器指令、汇编指令、机器级指令</h2><h3 id="机器语言"><a href="#机器语言" class="headerlink" title="机器语言"></a>机器语言</h3><p>使用特定计算机规定的指令格式而形成的0/1序列，用机器语言编写程序，并记录在纸带或卡片上，穿孔表示0，未穿孔表示1.</p><h3 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h3><p>机器语言的符号表示语言，与机器指令一一对应。汇编语言和机器语言都是低级语言、面向机器结构的语言，统称为机器级语言。</p><h3 id="高级程序设计语言-高级编程语言"><a href="#高级程序设计语言-高级编程语言" class="headerlink" title="高级程序设计语言/高级编程语言"></a>高级程序设计语言/高级编程语言</h3><p>面向算法设计、与具体机器结构无关、可读性比机器语言好、描述能力更强、高级语言中一条语句对应几条、几十条指令。</p><h3 id="三类翻译程序"><a href="#三类翻译程序" class="headerlink" title="三类翻译程序"></a>三类翻译程序</h3><p>汇编程序：汇编语言源程序→机器语言目标程序</p><p>编译程序：高级语言源程序→机器级目标程序</p><p>解释程序：将高级语言语句逐条翻译成机器指令并立即执行，不生成目标文件</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111426936.png" alt="image-20231111142642882"></p><h2 id="计算机系统性能评价（应用）：时钟周期、主频、CPI、用户CPU时间"><a href="#计算机系统性能评价（应用）：时钟周期、主频、CPI、用户CPU时间" class="headerlink" title="计算机系统性能评价（应用）：时钟周期、主频、CPI、用户CPU时间"></a><strong>计算机系统性能评价（应用）</strong>：时钟周期、主频、CPI、用户CPU时间</h2><h3 id="两种不同的性能"><a href="#两种不同的性能" class="headerlink" title="两种不同的性能"></a>两种不同的性能</h3><ol><li>度量单位时间内所完成的工作量（多媒体应用）<ol><li><strong>吞吐率</strong>（throughput）</li><li>带宽（bandwidth）</li></ol></li><li>度量完成一项工作所用时间（银行、证券等事务处理）<ol><li><strong>响应时间</strong></li><li>执行时间</li><li>等待时间或时延</li></ol></li></ol><h3 id="性能的测量"><a href="#性能的测量" class="headerlink" title="性能的测量"></a>性能的测量</h3><p>从执行时间来考虑，完成同样工作量所需时间最短的计算机性能最好，采用<strong>用户CPU时间</strong>来衡量计算机性能好坏。</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111436999.png" alt="image-20231111143630955"></p><h3 id="概念和指标"><a href="#概念和指标" class="headerlink" title="概念和指标"></a>概念和指标</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111505201.png" alt="image-20231111150545127"></p><h3 id="时间计算"><a href="#时间计算" class="headerlink" title="时间计算"></a>时间计算</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111506771.png" alt="image-20231111150644690"></p><h3 id="性能评估"><a href="#性能评估" class="headerlink" title="性能评估"></a>性能评估</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111507607.png" alt="image-20231111150739530"></p><h1 id="第二章-数据的机器级表示与处理"><a href="#第二章-数据的机器级表示与处理" class="headerlink" title="第二章 数据的机器级表示与处理"></a>第二章 数据的机器级表示与处理</h1><h2 id="第一讲"><a href="#第一讲" class="headerlink" title="第一讲"></a>第一讲</h2><h3 id="为什么采用二进制编码？"><a href="#为什么采用二进制编码？" class="headerlink" title="为什么采用二进制编码？"></a>为什么采用二进制编码？</h3><ul><li>制造两个稳定状态的物理器件容易</li><li>二进制编码、计数、运算规则简单</li><li>与逻辑命题对应，便于逻辑运算，方便使用逻辑电路实现算术运算</li></ul><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><p>二进制数：B(Binary)</p><p>八进制数：O(Octal)</p><p>十进制数：D(Decimal)</p><p>十六进制数：H(Hexadecimal)或0x+数字</p><h3 id="定点数与浮点数"><a href="#定点数与浮点数" class="headerlink" title="定点数与浮点数"></a>定点数与浮点数</h3><h4 id="定点表示"><a href="#定点表示" class="headerlink" title="定点表示"></a>定点表示</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111523350.png" alt="image-20231111152330313"></p><h4 id="浮点表示"><a href="#浮点表示" class="headerlink" title="浮点表示"></a>浮点表示</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111523580.png" alt="image-20231111152352541"></p><h3 id="数值数据的编码表示：原-反-补-移-8421"><a href="#数值数据的编码表示：原-反-补-移-8421" class="headerlink" title="数值数据的编码表示：原-反-补-移-8421"></a>数值数据的编码表示：原-反-补-移-8421</h3><h3 id="真值补码互求（综合考）"><a href="#真值补码互求（综合考）" class="headerlink" title="真值补码互求（综合考）"></a>真值补码互求（综合考）</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111525119.png" alt="image-20231111152545090"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111526689.png" alt="image-20231111152607656"></p><h3 id="特殊数的补码"><a href="#特殊数的补码" class="headerlink" title="特殊数的补码"></a>特殊数的补码</h3><p>字长为8位时</p><ul><li>原码范围-127~127</li><li>反码范围-127~127</li><li>补码范围-128~127</li></ul><p>-128没有原码和反码，只有补码（1000 0000）</p><p>0的补码是唯一的</p><h3 id="无符号整数和带符号整数之间的转换"><a href="#无符号整数和带符号整数之间的转换" class="headerlink" title="无符号整数和带符号整数之间的转换"></a>无符号整数和带符号整数之间的转换</h3><p><strong>2^31=2147483648</strong>，机器数为：100 ┅ 0（31个0）</p><p>8位无符号整数最大是255(1111 1111)</p><p>8位带符号整数最大是127(0111 1111)</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111547115.png" alt="image-20231111154715068"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111610544.png" alt="image-20231111161009497"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111610884.png" alt="image-20231111161019837"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111619989.png" alt="image-20231111161913932"></p><h3 id="浮点数机器数与真值互求（应用）"><a href="#浮点数机器数与真值互求（应用）" class="headerlink" title="浮点数机器数与真值互求（应用）"></a><strong>浮点数机器数与真值互求（应用）</strong></h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111621145.png" alt="image-20231111162130096"></p><h4 id="32位单精度浮点数表示"><a href="#32位单精度浮点数表示" class="headerlink" title="32位单精度浮点数表示"></a>32位单精度浮点数表示</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111622996.png" alt="image-20231111162242937"></p><h4 id="64位双精度浮点数表示"><a href="#64位双精度浮点数表示" class="headerlink" title="64位双精度浮点数表示"></a>64位双精度浮点数表示</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111623906.png" alt="image-20231111162310846"></p><h3 id="会判断数据类型强制转换后是否永真"><a href="#会判断数据类型强制转换后是否永真" class="headerlink" title="会判断数据类型强制转换后是否永真"></a>会判断数据类型强制转换后是否永真</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111637358.png" alt="image-20231111163712297"></p><h2 id="第二讲"><a href="#第二讲" class="headerlink" title="第二讲"></a>第二讲</h2><h3 id="单位：B、bit、字、字长"><a href="#单位：B、bit、字、字长" class="headerlink" title="单位：B、bit、字、字长"></a>单位：B、bit、字、字长</h3><ul><li>比特（bit，位）是计算机中处理、存储、传输信息的最小单位</li><li>字节（Byte）是二进制信息的计量单位，也称“位组”，<strong>1B=8b</strong><ul><li>现代计算机中，存储器<strong>按字节编址</strong></li><li>字节是最小可寻址单位</li></ul></li><li>除比特和字节外，还是用“字”（word）作为单位<ul><li>字长：CPU内部用于整数运算的数据通路的宽度，反映了一种计算及处理信息得能力</li><li>“字”表示被处理信息的单位，<strong>1个字=16bit</strong></li></ul></li><li>经常使用的容量度量单位：</li></ul><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111729408.png" alt="image-20231111172931361"></p><ul><li>通信中的带宽使用单位：</li></ul><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111730650.png" alt="image-20231111173020604"></p><h3 id="大端-小端"><a href="#大端-小端" class="headerlink" title="大端/小端"></a>大端/小端</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111731376.png" alt="image-20231111173143324"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111733374.png" alt="image-20231111173352260"></p><h3 id="边界对齐"><a href="#边界对齐" class="headerlink" title="边界对齐"></a>边界对齐</h3><ul><li>目前计算机所用数据字长一般为32位或64位，而存储器地址按字节编址</li><li>指令系统支持对字节、半字、字及双字的运算，也有位处理指令</li><li>各种不同长度的数据存放时，有两种处理方式：<ul><li>按边界对齐（假定字的宽度为32位，按字节编址）<ul><li>字地址：4的倍数</li><li>半字地址：2的倍数</li><li>字节地址：任意</li></ul></li><li>不按边界对齐<ul><li>坏处：可能会增加访存次数</li></ul></li></ul></li></ul><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111751324.png" alt="image-20231111175146250"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111752880.png" alt="image-20231111175202757"></p><h2 id="第三讲"><a href="#第三讲" class="headerlink" title="第三讲"></a>第三讲</h2><h3 id="按位运算"><a href="#按位运算" class="headerlink" title="按位运算"></a>按位运算</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111754503.png" alt="image-20231111175419455"></p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111754515.png" alt="image-20231111175432468"></p><h3 id="移位运算：逻辑移位、算术移位"><a href="#移位运算：逻辑移位、算术移位" class="headerlink" title="移位运算：逻辑移位、算术移位"></a>移位运算：逻辑移位、算术移位</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111909904.png" alt="image-20231111190923864"></p><h4 id="逻辑移位"><a href="#逻辑移位" class="headerlink" title="逻辑移位"></a>逻辑移位</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111913569.png" alt="image-20231111191301535"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111912051.png" alt="image-20231111191205008"></p><h4 id="补码的算术移位"><a href="#补码的算术移位" class="headerlink" title="补码的算术移位"></a>补码的算术移位</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111913908.png" alt="image-20231111191326849"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111913475.png" alt="image-20231111191341414"></p><h3 id="定点加减法并判断溢出（应用）"><a href="#定点加减法并判断溢出（应用）" class="headerlink" title="定点加减法并判断溢出（应用）"></a><strong>定点加减法并判断溢出（应用）</strong></h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111930088.png" alt="image-20231111193040037"></p><ul><li><p>运算溢出是指运算结果超出了数的表示范围</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111932316.png" alt="image-20231111193231256"></p></li><li><p>常用的判断溢出的方法有以下两种：</p><ol><li><p>采用变形补码判断溢出</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111934706.png" alt="image-20231111193425656"></p></li><li><p>利用符号位进位信号判断溢出</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111936865.png" alt="image-20231111193602813"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311111936934.png" alt="image-20231111193656862"></p></li></ol></li></ul><p>（浮点数加减运算不考）</p><p>标志位有哪些，如何判断</p><h1 id="第三章-程序的转换及机器级表示"><a href="#第三章-程序的转换及机器级表示" class="headerlink" title="第三章 程序的转换及机器级表示"></a>第三章 程序的转换及机器级表示</h1><h3 id="指令概念"><a href="#指令概念" class="headerlink" title="指令概念"></a>指令概念</h3><ul><li>有微指令、机器指令、汇编指令、伪（宏）指令等</li><li>微指令时微程序级命令，属于硬件范畴，相当于洗、切、煮、炒菜做菜“微过程”</li><li>机器指令处于硬件和软件的交界面</li><li>汇编指令时机器指令的汇编表示形式，即符号表示</li><li>机器指令是一个0/1序列，由若干字段组成和汇编指令一一对应，他们都与具体机器结构有关，都属于机器级指令</li><li>伪指令是由若干汇编指令组成的序列，属于软件范畴，相当于由多个菜谱合成一个“大菜”的过程</li></ul><h3 id="机器指令及汇编指令"><a href="#机器指令及汇编指令" class="headerlink" title="机器指令及汇编指令"></a>机器指令及汇编指令</h3><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112016255.png" alt="image-20231111201641193"></p><h3 id="ISA-常用数据类型及其位数和后缀"><a href="#ISA-常用数据类型及其位数和后缀" class="headerlink" title="ISA 常用数据类型及其位数和后缀"></a>ISA 常用数据类型及其位数和后缀</h3><ul><li>ISA规定了：<ul><li>可执行的指令的集合，包括指令格式、操作种类以及每种操作对应的操作数的相应规定</li><li>指令可以接受的操作数的类型</li><li>操作数所能存放的寄存器组的结构，包括每个寄存器的名称、编号、长度和用途</li><li>操作数所能存放的存储空间的大小和编址方式</li><li>操作数所在存储空间存放时按照大端还是小端方式存放</li><li>指令获取操作数的方式，即寻址方式</li><li>指令执行过程的控制方式，包括程序计数器、条件码定义等</li></ul></li></ul><h4 id="IA-32支持的数据类型及格式"><a href="#IA-32支持的数据类型及格式" class="headerlink" title="IA-32支持的数据类型及格式"></a>IA-32支持的数据类型及格式</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112027612.png" alt="image-20231111202708531"></p><h4 id="IA-32体系结构"><a href="#IA-32体系结构" class="headerlink" title="IA-32体系结构"></a>IA-32体系结构</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112029049.png" alt="image-20231111202930957"></p><h3 id="寻址方式（结合指令考）（综合考）"><a href="#寻址方式（结合指令考）（综合考）" class="headerlink" title="寻址方式（结合指令考）（综合考）"></a>寻址方式（结合指令考）（综合考）</h3><h4 id="8086-8088的寄存器组织"><a href="#8086-8088的寄存器组织" class="headerlink" title="8086/8088的寄存器组织"></a>8086/8088的寄存器组织</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112030735.png" alt="image-20231111203003598"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112030131.png" alt="image-20231111203017995"></p><h4 id="IA-32的寻址方式"><a href="#IA-32的寻址方式" class="headerlink" title="IA-32的寻址方式"></a>IA-32的寻址方式</h4><ul><li>寻址方式<ul><li>根据指令给定信息得到操作数或操作数地址</li></ul></li><li>操作数所在的位置<ul><li>指令中：立即寻址</li><li>寄存器中：寄存器寻址</li><li>存储单元中（属于存储器操作数，按字节编址）：其它寻址方式</li></ul></li></ul><h4 id="保护模式下的寻址方式"><a href="#保护模式下的寻址方式" class="headerlink" title="保护模式下的寻址方式"></a>保护模式下的寻址方式</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112032314.png" alt="image-20231111203255174"></p><h4 id="常用寻址方式"><a href="#常用寻址方式" class="headerlink" title="常用寻址方式"></a>常用寻址方式</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112103475.png" alt="image-20231111210337424"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112103736.png" alt="image-20231111210355691"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112104216.png" alt="image-20231111210412165"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112104066.png" alt="image-20231111210424020"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112104471.png" alt="image-20231111210438397"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112105395.png" alt="image-20231111210528353"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112106893.png" alt="image-20231111210602847"></p><h4 id="IA-32常用指令及操作"><a href="#IA-32常用指令及操作" class="headerlink" title="IA-32常用指令及操作"></a>IA-32常用指令及操作</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112151464.png" alt="image-20231111215134401"></p><h4 id="传送指令"><a href="#传送指令" class="headerlink" title="传送指令"></a>传送指令</h4><blockquote><p>b：字节</p><p>w：字</p><p>l：双字</p></blockquote><ol><li>通用数据传送指令<ul><li>MOV：一般传送，包括movb、movw和movl等</li><li>MOVS：符号扩展传送，如movsbw、movswl等</li><li>MOVZ：零扩展传送，如movzwl、movzbl等</li><li>PUSH/POP：入栈/出栈，如pushl、pushw、popl、popw等</li></ul></li><li>地址传送指令<ul><li>LEA：加载有效地址，如”leal(%dex,%eax),%eax”的功能为R[eax]←R[edx]+[eax]，执行前，若R[edx]=i,R[eax]=j，则执行指令后，R[eax]=i+j</li></ul></li><li>输入输出指令（了解）<ul><li>IN和OUT：I/O端与寄存器之间的交换</li></ul></li><li>标志传送指令（了解）<ul><li>PUSHF、POPF：将EFLAG压栈，或将栈顶内容送EFLAG</li></ul></li></ol><h4 id="MOV指令"><a href="#MOV指令" class="headerlink" title="MOV指令"></a>MOV指令</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112201448.png" alt="image-20231111220109362"></p><h4 id="push-pop指令"><a href="#push-pop指令" class="headerlink" title="push/pop指令"></a>push/pop指令</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112204322.png" alt="image-20231111220400242"></p><h4 id="定点算术运算指令"><a href="#定点算术运算指令" class="headerlink" title="定点算术运算指令"></a>定点算术运算指令</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112205386.png" alt="image-20231111220523327"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112206128.png" alt="image-20231111220652036"></p><h4 id="按位运算指令"><a href="#按位运算指令" class="headerlink" title="按位运算指令"></a>按位运算指令</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112208724.png" alt="image-20231111220839684"></p><h4 id="控制转移指令"><a href="#控制转移指令" class="headerlink" title="控制转移指令"></a>控制转移指令</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112209695.png" alt="image-20231111220927646"></p><h4 id="条件转移指令"><a href="#条件转移指令" class="headerlink" title="条件转移指令"></a>条件转移指令</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202311112209518.png" alt="image-20231111220944354"></p><h3 id="RTL-语言（综合考）"><a href="#RTL-语言（综合考）" class="headerlink" title="RTL 语言（综合考）"></a>RTL 语言（综合考）</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;复习以PPT+平时作业为主&lt;/p&gt;
&lt;p&gt;应用题：4选2&lt;/p&gt;
&lt;p&gt;①最终总成绩100%=期末50%+其他成绩50%。&lt;/p&gt;
&lt;p&gt;②其中其他成绩100%=&lt;strong&gt;期中30%&lt;/strong&gt;+（作业+实验）50%+考勤20%。&lt;/p</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机组成原理" scheme="http://cdt3211.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>阅读清单</title>
    <link href="http://cdt3211.github.io/2023/09/23/books/"/>
    <id>http://cdt3211.github.io/2023/09/23/books/</id>
    <published>2023-09-23T15:06:37.000Z</published>
    <updated>2023-10-14T12:50:53.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="专业相关"><a href="#专业相关" class="headerlink" title="专业相关"></a>专业相关</h1><ul><li><input disabled="" type="checkbox"> 深入理解计算机系统</li><li><input disabled="" type="checkbox"> 算法导论</li><li><input checked="" disabled="" type="checkbox"> 代码整洁之道</li></ul><h1 id="文学作品"><a href="#文学作品" class="headerlink" title="文学作品"></a>文学作品</h1><ul><li><input disabled="" type="checkbox"> 1984-乔治·奥威尔</li><li><input disabled="" type="checkbox"> 文城-余华</li><li><input disabled="" type="checkbox"> 人生海海-麦家</li><li><input checked="" disabled="" type="checkbox"> 第七天-余华</li><li><input checked="" disabled="" type="checkbox"> 许三观卖血记-余华</li><li><input checked="" disabled="" type="checkbox"> 兄弟-余华</li><li><input checked="" disabled="" type="checkbox"> 东方快车谋杀案-阿加莎·克里斯蒂</li><li><input checked="" disabled="" type="checkbox"> 棋王-阿城</li><li><input checked="" disabled="" type="checkbox"> 永远有多远-铁凝</li><li><input checked="" disabled="" type="checkbox"> 活着-余华</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;专业相关&quot;&gt;&lt;a href=&quot;#专业相关&quot; class=&quot;headerlink&quot; title=&quot;专业相关&quot;&gt;&lt;/a&gt;专业相关&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 深入理解计算机系统&lt;/li&gt;
&lt;li&gt;&lt;</summary>
      
    
    
    
    
    <category term="阅读" scheme="http://cdt3211.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>CS61A学习笔记（持续更新中）</title>
    <link href="http://cdt3211.github.io/2023/09/10/cs61a-notes/"/>
    <id>http://cdt3211.github.io/2023/09/10/cs61a-notes/</id>
    <published>2023-09-10T07:40:00.000Z</published>
    <updated>2023-12-20T13:11:47.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HW"><a href="#HW" class="headerlink" title="HW"></a>HW</h1><h2 id="hw01"><a href="#hw01" class="headerlink" title="hw01"></a>hw01</h2><h3 id="Q5-If-Function-vs-Statement"><a href="#Q5-If-Function-vs-Statement" class="headerlink" title="Q5 If Function vs Statement"></a>Q5 If Function vs Statement</h3><p>Let’s try to write a function that does the same thing as an <code>if</code> statement.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">if_function</span>(<span class="hljs-params">condition, true_result, false_result</span>):<br>    <span class="hljs-keyword">if</span> condition:<br>        <span class="hljs-keyword">return</span> true_result<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> false_result<br></code></pre></td></tr></table></figure><p>Despite the doctests above, this function actually does <em>not</em> do the same thing as an <code>if</code> statement in all cases. To prove this fact, write functions <code>cond</code>, <code>true_func</code>, and <code>false_func</code> such that <code>with_if_statement</code> prints the number <code>47</code>, but <code>with_if_function</code> prints both <code>42</code> and <code>47</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">with_if_statement</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    &gt;&gt;&gt; result = with_if_statement()</span><br><span class="hljs-string">    47</span><br><span class="hljs-string">    &gt;&gt;&gt; print(result)</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> cond():<br>        <span class="hljs-keyword">return</span> true_func()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> false_func()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">with_if_function</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    &gt;&gt;&gt; result = with_if_function()</span><br><span class="hljs-string">    42</span><br><span class="hljs-string">    47</span><br><span class="hljs-string">    &gt;&gt;&gt; print(result)</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> if_function(cond(), true_func(), false_func())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cond</span>():<br>    <span class="hljs-string">&quot;*** YOUR CODE HERE ***&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">true_func</span>():<br>    <span class="hljs-string">&quot;*** YOUR CODE HERE ***&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">42</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">false_func</span>():<br>    <span class="hljs-string">&quot;*** YOUR CODE HERE ***&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">47</span>)<br></code></pre></td></tr></table></figure><p>执行<code>result = with_if_statement(</code>)和<code>result = with_if_function()</code>结果不同，是因为在<code>with_if_function()</code>函数中，<code>return if_function(cond(), true_func(), false_func())</code>的执行方式是根据<code>if_function</code>函数的逻辑来确定的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">if_function</span>(<span class="hljs-params">condition, true_result, false_result</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Return true_result if condition is a true value, and</span><br><span class="hljs-string">    false_result otherwise.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> condition:<br>        <span class="hljs-keyword">return</span> true_result<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> false_result<br></code></pre></td></tr></table></figure><p>这个函数是一个普通的Python函数，它接受三个参数：<code>condition</code>、<code>true_result</code>和<code>false_result</code>。然后根据<code>condition</code>的值来返回其中之一。函数内部的<code>if condition:</code>语句用于判断<code>condition</code>的值，如果<code>condition</code>为真，就返回<code>true_result</code>，否则返回<code>false_result</code>。</p><p>在这个特定的情况下，<code>cond()</code>、<code>true_func()</code>和<code>false_func()</code>都是函数调用，它们在<code>if_function</code>函数调用之前就已经被执行了。这是因为在调用<code>if_function(cond(), true_func(), false_func())</code>时，函数参数是在调用前就计算并传递给<code>if_function</code>的。所以，<code>cond()</code>、<code>true_func()</code>和<code>false_func()</code>都会在<code>if_function</code>的内部判断之前执行，而不是根据条件选择执行其中之一。</p><h1 id="LAB"><a href="#LAB" class="headerlink" title="LAB"></a>LAB</h1><h2 id="lab01"><a href="#lab01" class="headerlink" title="lab01"></a>lab01</h2><h3 id="Q7-Double-Eights"><a href="#Q7-Double-Eights" class="headerlink" title="Q7:Double Eights"></a>Q7:Double Eights</h3><p>Write a function that takes in a number and determines if the digits contain two adjacent 8s.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">double_eights</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Return true if n has two eights in a row.</span><br><span class="hljs-string">    &gt;&gt;&gt; double_eights(8)</span><br><span class="hljs-string">    False</span><br><span class="hljs-string">    &gt;&gt;&gt; double_eights(88)</span><br><span class="hljs-string">    True</span><br><span class="hljs-string">    &gt;&gt;&gt; double_eights(2882)</span><br><span class="hljs-string">    True</span><br><span class="hljs-string">    &gt;&gt;&gt; double_eights(880088)</span><br><span class="hljs-string">    True</span><br><span class="hljs-string">    &gt;&gt;&gt; double_eights(12345)</span><br><span class="hljs-string">    False</span><br><span class="hljs-string">    &gt;&gt;&gt; double_eights(80808080)</span><br><span class="hljs-string">    False</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-string">&quot;*** YOUR CODE HERE ***&quot;</span><br>    <span class="hljs-keyword">while</span> n:<br>        last=n%<span class="hljs-number">10</span> <span class="hljs-comment">#提取末位数字</span><br>        n//=n <span class="hljs-comment">#消去末位数字</span><br>        <span class="hljs-keyword">if</span> last==<span class="hljs-number">8</span>==(n%<span class="hljs-number">10</span>): <span class="hljs-comment">#判断最后两位是否是8</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><h1 id="PRO"><a href="#PRO" class="headerlink" title="PRO"></a>PRO</h1><p>Pro7test</p><h2 id="Hog"><a href="#Hog" class="headerlink" title="Hog"></a>Hog</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">count</span>(<span class="hljs-params">n</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">s0, s1</span>):<br><span class="hljs-built_in">print</span>(n, s0)<br><span class="hljs-keyword">return</span> count(n + <span class="hljs-number">1</span>)<br><span class="hljs-keyword">return</span> say<br></code></pre></td></tr></table></figure><p>输入<code>s0, s1 = play(always_roll(1), always_roll(1), dice=make_test_dice(5), goal=10, say=count(1))</code>后，输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-number">1</span> <span class="hljs-number">5</span><br><span class="hljs-number">2</span> <span class="hljs-number">5</span><br><span class="hljs-number">3</span> <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><blockquote><p>这个代码的效果是无限递归地调用<code>count</code>函数，并不断地增加参数<code>n</code>的值，每次都打印出当前的<code>n</code>和<code>s0</code>的值。因为没有终止条件，所以这个递归将会无限循环下去，直到出现栈溢出或手动停止程序运行。</p></blockquote><blockquote><p>需要注意的是，<code>s1</code>参数在这个代码中没有被使用，因此对于代码的功能来说是没有影响的。如果想要更清楚地理解代码的目的和效果，需要查看完整的代码或者了解更多关于<code>s1</code>参数的用法。</p></blockquote><p>因此，第二行n+1=2，但是第二轮是p1掷色子，s0不会增加，故s0仍然为5，第三轮到p0掷色子，s0增加为10</p><h3 id="pro9"><a href="#pro9" class="headerlink" title="pro9"></a>pro9</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">max_scoring_num_rolls</span>(<span class="hljs-params">dice=six_sided, trials_count=<span class="hljs-number">1000</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Return the number of dice (1 to 10) that gives the highest average turn</span><br><span class="hljs-string">    score by calling roll_dice with the provided DICE over TRIALS_COUNT times.</span><br><span class="hljs-string">    Assume that the dice always return positive outcomes.</span><br><span class="hljs-string">    &gt;&gt;&gt; dice = make_test_dice(1, 6)</span><br><span class="hljs-string">    &gt;&gt;&gt; max_scoring_num_rolls(dice)</span><br><span class="hljs-string">    1</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># BEGIN PROBLEM 9</span><br>    <span class="hljs-string">&quot;*** YOUR CODE HERE ***&quot;</span><br>    i=<span class="hljs-number">1</span><br>    <span class="hljs-built_in">max</span>=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> i&lt;=<span class="hljs-number">10</span>:<br>        a=make_averaged(roll_dice,trials_count)(i,dice)<br>        <span class="hljs-keyword">if</span> a&gt;<span class="hljs-built_in">max</span>:<br>            <span class="hljs-built_in">max</span>=a<br>            num=i<br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br>    <span class="hljs-comment"># END PROBLEM 9</span><br></code></pre></td></tr></table></figure><blockquote><p>这段代码是一个函数，其目的是找出在一定数量的试验中，使用不同数量的骰子（从1到10颗）时，哪种数量的骰子能够获得最高的平均得分。</p><p>在这段代码中，<code>make_averaged(roll_dice, trials_count)</code> 返回了一个新的函数，然后立即对这个新函数进行了调用，传递了参数 <code>(i, dice)</code>。这种写法是函数的嵌套调用。</p><p>让我们分解这个表达式的含义：</p><ol><li><code>make_averaged(roll_dice, trials_count)</code>：这部分代码调用了函数 <code>make_averaged</code>，并传递了两个参数 <code>roll_dice</code> 和 <code>trials_count</code>。<code>make_averaged</code> 函数返回了一个新的函数，该函数用于计算指定函数的平均值，其中 <code>roll_dice</code> 是要计算平均值的函数，<code>trials_count</code> 是进行平均值计算时的试验次数。</li><li><code>(i, dice)</code>：这部分是对上述返回的新函数的调用。这个新函数接受两个参数，分别是 <code>i</code> 和 <code>dice</code>。在这个上下文中，<code>i</code> 表示骰子的数量，<code>dice</code> 表示模拟掷骰子的函数。这个调用返回了 <code>i</code> 个骰子使用 <code>dice</code> 模拟的平均得分。</li></ol><p>所以，整个表达式 <code>make_averaged(roll_dice, trials_count)(i, dice)</code> 的作用是计算使用 <code>i</code> 个骰子、模拟掷骰子的函数 <code>dice</code> 的平均得分，基于 <code>trials_count</code> 次试验。这个平均值是通过嵌套调用两个函数实现的。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HW&quot;&gt;&lt;a href=&quot;#HW&quot; class=&quot;headerlink&quot; title=&quot;HW&quot;&gt;&lt;/a&gt;HW&lt;/h1&gt;&lt;h2 id=&quot;hw01&quot;&gt;&lt;a href=&quot;#hw01&quot; class=&quot;headerlink&quot; title=&quot;hw01&quot;&gt;&lt;/a&gt;hw01&lt;/h</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="python" scheme="http://cdt3211.github.io/tags/python/"/>
    
    <category term="cs61a" scheme="http://cdt3211.github.io/tags/cs61a/"/>
    
  </entry>
  
  <entry>
    <title>基于Zeabur部署Memos实现说说页面</title>
    <link href="http://cdt3211.github.io/2023/08/20/%E5%9F%BA%E4%BA%8EZeabur%E9%83%A8%E7%BD%B2Memos%E5%AE%9E%E7%8E%B0%E8%AF%B4%E8%AF%B4%E9%A1%B5%E9%9D%A2/"/>
    <id>http://cdt3211.github.io/2023/08/20/%E5%9F%BA%E4%BA%8EZeabur%E9%83%A8%E7%BD%B2Memos%E5%AE%9E%E7%8E%B0%E8%AF%B4%E8%AF%B4%E9%A1%B5%E9%9D%A2/</id>
    <published>2023-08-20T07:03:22.000Z</published>
    <updated>2023-12-20T13:12:49.644Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这几天一直想给博客增加一个说说页面，昨天尝试了用leancloud和artitalk成功部署了页面，但是由于我用的leancloud是国际版的（国内版的需要备案才能使用），所以在国内不用梯子我就加载不出说说页面。于是我就在网上寻找其他的办法，我发现许多人都在用memos，这个比起artitalk访问就快多了，而且也很美观，便想着也部署一个放在我的博客上。由于我在这方面完全是零基础，搭建期间遇到了不少问题，克服了重重困难后，我终于部署成功了。在此写下这篇文章期望能帮到其他和我一样的小白们。</p><p>本篇参考了下面两个大佬的教程</p><p>子虚栈的<a href="https://blog.si-on.top/2023/deploy-memos-in-60s/">一分钟免费部署你的专属 Memos</a></p><p>Leonus的<a href="https://blog.leonus.cn/2023/memeos.html">基于Momos实现说说和清单功能</a></p><h1 id="创建Zeabur并部署Memos"><a href="#创建Zeabur并部署Memos" class="headerlink" title="创建Zeabur并部署Memos"></a>创建Zeabur并部署Memos</h1><p>这一步可以直接看子虚栈大佬的教程，已经写得很清楚了，<a href="https://blog.si-on.top/2023/deploy-memos-in-60s/">一分钟免费部署你的专属 Memos</a></p><h1 id="将Memos部署到博客中"><a href="#将Memos部署到博客中" class="headerlink" title="将Memos部署到博客中"></a>将Memos部署到博客中</h1><h2 id="部署页面"><a href="#部署页面" class="headerlink" title="部署页面"></a>部署页面</h2><p>首先创建一个新页面，在博客根目录中执行</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> talk(名字可以自定义)<br></code></pre></td></tr></table></figure><p>然后记得在主题配置文件中的目录中增加你新创建的talk页面，这样才能在博客菜单中显示“talk”按钮</p><p>然后打开blog\source\talk\index.md</p><p>在里面增加以下代码（源自<a href="https://blog.leonus.cn/">Leonus - 进一寸有进一寸的欢喜。</a>)）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&lt;style&gt;</span><br><span class="hljs-string">/*</span> <span class="hljs-string">页面初始化</span> <span class="hljs-string">*/</span><br><span class="hljs-string">div#page</span> &#123;<br>    <span class="hljs-attr">background:</span> <span class="hljs-string">none;</span><br>    <span class="hljs-attr">border:</span> <span class="hljs-number">0</span><span class="hljs-string">;</span><br>    <span class="hljs-attr">padding:</span> <span class="hljs-number">0</span><span class="hljs-string">;</span><br>&#125;<br><br>[<span class="hljs-string">data-theme=dark</span>] <span class="hljs-comment">#twikoo .tk-content,</span><br><span class="hljs-comment">#twikoo .tk-content &#123;</span><br>    <span class="hljs-attr">padding:</span> <span class="hljs-number">0</span><span class="hljs-string">;</span><br>    <span class="hljs-attr">background:</span> <span class="hljs-string">transparent;</span><br><span class="hljs-string">&#125;</span><br><br><span class="hljs-string">.talk_item,</span><br><span class="hljs-string">.tk-expand,</span><br><span class="hljs-string">.tk-comments-container&gt;.tk-comment,</span><br><span class="hljs-string">.tk-submit:nth-child(1)&#123;</span><br>    <span class="hljs-attr">background:</span> <span class="hljs-string">var(--card-bg);</span><br>    <span class="hljs-attr">border:</span> <span class="hljs-string">1px</span> <span class="hljs-string">solid</span> <span class="hljs-comment">#e0e3ed;</span><br>    <span class="hljs-attr">box-shadow:</span> <span class="hljs-number">0</span> <span class="hljs-string">5px</span> <span class="hljs-string">10px</span> <span class="hljs-string">rgb(189</span> <span class="hljs-number">189</span> <span class="hljs-number">189</span> <span class="hljs-string">/</span> <span class="hljs-number">10</span><span class="hljs-string">%);</span><br>    <span class="hljs-attr">transition:</span> <span class="hljs-string">all</span> <span class="hljs-string">.3s</span> <span class="hljs-string">ease-in-out;</span><br>    <span class="hljs-attr">border-radius:</span> <span class="hljs-string">12px;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">.talk_item:hover,</span><br><span class="hljs-string">.tk-comments-container&gt;.tk-comment:hover,</span><br><span class="hljs-string">.tk-submit:nth-child(1):hover</span> &#123;<br>    <span class="hljs-attr">border-color:</span> <span class="hljs-comment">#49b1f5;</span><br>&#125;<br><br><span class="hljs-string">.tk-submit</span> &#123;<br>    <span class="hljs-attr">padding:</span> <span class="hljs-string">20px</span> <span class="hljs-string">10px</span> <span class="hljs-number">0</span><span class="hljs-string">;</span><br>&#125;<br><br><span class="hljs-string">.tk-comments-container&gt;.tk-comment</span> &#123;<br>    <span class="hljs-attr">padding:</span> <span class="hljs-string">15px;</span><br>&#125;<br><br><span class="hljs-string">/*</span> <span class="hljs-string">页面初始化结束</span> <span class="hljs-string">*/</span><br><br><span class="hljs-comment">#talk&#123;</span><br>    <span class="hljs-attr">margin-top:</span> <span class="hljs-string">1rem;</span><br><span class="hljs-string">&#125;</span><br><br><span class="hljs-comment">#talk .loading &#123;</span><br>    <span class="hljs-attr">display:</span> <span class="hljs-string">flex;</span><br>    <span class="hljs-attr">align-items:</span> <span class="hljs-string">center;</span><br>    <span class="hljs-attr">justify-content:</span> <span class="hljs-string">center;</span><br>    <span class="hljs-attr">flex-direction:</span> <span class="hljs-string">column;</span><br><span class="hljs-string">&#125;</span><br><br><span class="hljs-comment">#talk .loading img &#123;</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-string">200px;</span><br><span class="hljs-string">&#125;</span><br><br><span class="hljs-string">.talk_item</span> &#123;<br>    <span class="hljs-attr">display:</span> <span class="hljs-string">flex;</span><br>    <span class="hljs-attr">flex-direction:</span> <span class="hljs-string">column;</span><br>    <span class="hljs-attr">padding:</span> <span class="hljs-string">20px;</span><br>    <span class="hljs-attr">margin-bottom:</span> <span class="hljs-string">15px;</span><br>&#125;<br><br><span class="hljs-string">.avatar</span> &#123;<br>    <span class="hljs-attr">margin:</span> <span class="hljs-number">0</span> <span class="hljs-type">!important;</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-string">60px;</span><br>    <span class="hljs-attr">height:</span> <span class="hljs-string">60px;</span><br>    <span class="hljs-attr">border-radius:</span> <span class="hljs-string">10px;</span><br>&#125;<br><br><br><span class="hljs-string">.talk_bottom,</span><br><span class="hljs-string">.talk_meta</span> &#123;<br>    <span class="hljs-attr">display:</span> <span class="hljs-string">flex;</span><br>    <span class="hljs-attr">align-items:</span> <span class="hljs-string">center;</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-number">100</span><span class="hljs-string">%;</span><br>    <span class="hljs-attr">line-height:</span> <span class="hljs-number">1.5</span><span class="hljs-string">;</span><br>&#125;<br><span class="hljs-string">.talk_bottom&#123;</span><br>    <span class="hljs-attr">justify-content:</span> <span class="hljs-string">space-between;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">.info</span> &#123;<br>    <span class="hljs-attr">display:</span> <span class="hljs-string">flex;</span><br>    <span class="hljs-attr">flex-direction:</span> <span class="hljs-string">column;</span><br>    <span class="hljs-attr">margin-left:</span> <span class="hljs-string">10px;</span><br>&#125;<br><span class="hljs-string">span.talk_nick</span> &#123;<br>    <span class="hljs-attr">color:</span> <span class="hljs-comment">#6dbdc3;</span><br>    <span class="hljs-attr">font-size:</span> <span class="hljs-number">1.</span><span class="hljs-string">2rem;</span><br>&#125;<br><span class="hljs-string">svg.is-badge.icon</span> &#123;<br>    <span class="hljs-attr">width:</span> <span class="hljs-string">15px;</span><br>    <span class="hljs-attr">margin-left:</span> <span class="hljs-string">5px;</span><br>    <span class="hljs-attr">padding-top:</span> <span class="hljs-string">3px;</span><br>&#125;<br><span class="hljs-string">span.talk_date</span> &#123;<br>    <span class="hljs-attr">opacity:</span> <span class="hljs-number">.6</span><span class="hljs-string">;</span><br>&#125;<br><br><span class="hljs-string">.talk_content</span> &#123;<br>    <span class="hljs-attr">line-height:</span> <span class="hljs-number">1.5</span><span class="hljs-string">;</span><br>    <span class="hljs-attr">margin-top:</span> <span class="hljs-string">10px;</span><br>&#125;<br><span class="hljs-string">.zone_imgbox</span> &#123;<br>    <span class="hljs-attr">display:</span> <span class="hljs-string">flex;</span><br>    <span class="hljs-attr">flex-wrap:</span> <span class="hljs-string">wrap;</span><br>    <span class="hljs-string">--w:</span> <span class="hljs-string">calc(25%</span> <span class="hljs-bullet">-</span> <span class="hljs-string">8px);</span><br>    <span class="hljs-attr">gap:</span> <span class="hljs-string">10px;</span><br>    <span class="hljs-attr">margin-top:</span> <span class="hljs-string">5px;</span><br>&#125;<br><span class="hljs-string">.zone_imgbox</span> <span class="hljs-string">a</span> &#123;<br>    <span class="hljs-attr">display:</span> <span class="hljs-string">block;</span><br>    <span class="hljs-attr">border-radius:</span> <span class="hljs-string">12px;</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-string">var(--w);</span><br>    <span class="hljs-attr">aspect-ratio:</span> <span class="hljs-number">1</span><span class="hljs-string">/1;</span><br>    <span class="hljs-attr">position:</span> <span class="hljs-string">relative;</span><br>&#125;<br><br><span class="hljs-string">.zone_imgbox</span> <span class="hljs-string">img</span> &#123;<br>    <span class="hljs-attr">width:</span> <span class="hljs-number">100</span><span class="hljs-string">%;</span><br>    <span class="hljs-attr">height:</span> <span class="hljs-number">100</span><span class="hljs-string">%;</span><br>    <span class="hljs-attr">margin:</span> <span class="hljs-number">0</span> <span class="hljs-type">!important;</span><br>    <span class="hljs-attr">object-fit:</span> <span class="hljs-string">cover;</span><br>&#125;<br><span class="hljs-string">/*</span> <span class="hljs-string">底部</span> <span class="hljs-string">*/</span><br><br><span class="hljs-string">.talk_bottom</span> &#123;<br>    <span class="hljs-attr">opacity:</span> <span class="hljs-number">.9</span><span class="hljs-string">;</span><br>&#125;<br><span class="hljs-string">.talk_bottom</span> <span class="hljs-string">.icon</span> &#123;<br>    <span class="hljs-attr">color:</span> <span class="hljs-string">var(--font-color);</span><br>    <span class="hljs-attr">float:</span> <span class="hljs-string">right;</span><br>    <span class="hljs-attr">transition:</span> <span class="hljs-string">all</span> <span class="hljs-string">.3s;</span><br>&#125;<br><br><span class="hljs-string">.talk_bottom</span> <span class="hljs-string">.icon:hover</span> &#123;<br>    <span class="hljs-attr">color:</span> <span class="hljs-comment">#49b1f5;</span><br>&#125;<br><br><span class="hljs-string">span.talk_tag&#123;</span><br>    <span class="hljs-attr">font-size:</span> <span class="hljs-string">14px;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">.talk_content&gt;a</span> &#123;<br>    <span class="hljs-attr">margin:</span> <span class="hljs-number">0</span> <span class="hljs-string">3px;</span><br>    <span class="hljs-attr">color:</span> <span class="hljs-comment">#ff7d73 !important;</span><br>&#125;<br><span class="hljs-string">.talk_content&gt;a:hover&#123;</span><br>    <span class="hljs-attr">text-decoration:</span> <span class="hljs-string">none</span> <span class="hljs-type">!important;</span><br>    <span class="hljs-attr">color:</span> <span class="hljs-comment">#ff5143 !important</span><br><span class="hljs-string">&#125;</span><br><br><span class="hljs-string">/*</span> <span class="hljs-string">提醒</span> <span class="hljs-string">*/</span><br><br><span class="hljs-string">.limit</span> &#123;<br>    <span class="hljs-attr">transition:</span> <span class="hljs-string">all</span> <span class="hljs-string">.3s</span> <span class="hljs-string">ease-in-out;</span><br>    <span class="hljs-attr">color:</span> <span class="hljs-string">rgba(76</span>, <span class="hljs-number">73</span>, <span class="hljs-number">72</span>, <span class="hljs-number">0.6</span><span class="hljs-string">);</span><br>&#125;<br><br>[<span class="hljs-string">data-theme=dark</span>] <span class="hljs-string">.limit</span> &#123;<br>    <span class="hljs-attr">color:</span> <span class="hljs-string">rgba(255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.5</span><span class="hljs-string">);</span><br>&#125;<br><br><span class="hljs-string">.limit</span> &#123;<br>    <span class="hljs-attr">display:</span> <span class="hljs-string">none;</span><br>    <span class="hljs-attr">text-align:</span> <span class="hljs-string">center;</span><br>    <span class="hljs-attr">margin-top:</span> <span class="hljs-string">20px;</span><br>    <span class="hljs-attr">color:</span> <span class="hljs-string">var(--font-color);</span><br>&#125;<br><span class="hljs-string">@media</span> <span class="hljs-string">screen</span> <span class="hljs-string">and</span> <span class="hljs-string">(max-width:</span> <span class="hljs-string">900px)</span> &#123;<br>    <span class="hljs-string">.zone_imgbox</span> &#123;<br>        <span class="hljs-string">--w:</span> <span class="hljs-string">calc(33%</span> <span class="hljs-bullet">-</span> <span class="hljs-string">5px);</span><br>    &#125;<br>    <span class="hljs-comment">#talk&#123;</span><br>        <span class="hljs-attr">margin:</span> <span class="hljs-string">10px</span> <span class="hljs-string">3px</span> <span class="hljs-number">0</span><br>    &#125;<br>    <span class="hljs-comment">#post-comment&#123;</span><br>        <span class="hljs-attr">margin:</span> <span class="hljs-number">0</span> <span class="hljs-string">3px</span><br>    <span class="hljs-string">&#125;</span><br><span class="hljs-string">&#125;</span><br><br><span class="hljs-string">@media</span> <span class="hljs-string">screen</span> <span class="hljs-string">and</span> <span class="hljs-string">(max-width:</span> <span class="hljs-string">768px)</span> &#123;<br>    <span class="hljs-string">.zone_imgbox</span> &#123;<br>        <span class="hljs-attr">gap:</span> <span class="hljs-string">6px;</span><br>    &#125;<br>    <span class="hljs-string">.zone_imgbox</span> &#123;<br>        <span class="hljs-string">--w:</span> <span class="hljs-string">calc(50%</span> <span class="hljs-bullet">-</span> <span class="hljs-string">3px);</span><br>    &#125;<br>    <span class="hljs-string">span.talk_date</span> &#123;<br>        <span class="hljs-attr">font-size:</span> <span class="hljs-string">14px;</span><br>    &#125;<br>&#125;<br><span class="hljs-string">&lt;/style&gt;</span><br><br><span class="hljs-string">&lt;div</span> <span class="hljs-string">id=&quot;talk&quot;&gt;</span><br><span class="hljs-string">&lt;div</span> <span class="hljs-string">class=&#x27;loading&#x27;&gt;&lt;img</span> <span class="hljs-string">src=&quot;/img/loading.svg&quot;</span> <span class="hljs-string">alt=&quot;加载中...&quot;&gt;&lt;/div&gt;</span><br><span class="hljs-string">&lt;/div&gt;</span><br><br><span class="hljs-string">&lt;div</span> <span class="hljs-string">class=&quot;limit&quot;&gt;-</span> <span class="hljs-string">只展示最近30条说说</span> <span class="hljs-string">-&lt;/div&gt;</span><br><span class="hljs-string">&lt;script&gt;</span><br><span class="hljs-string">if(1)</span> &#123;<br>    <span class="hljs-string">let</span> <span class="hljs-string">url</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;https://你的memos地址&#x27;</span><span class="hljs-string">//这里地址最后面不要有&#x27;/&#x27;</span><br>    <br>    <span class="hljs-string">fetch(url</span> <span class="hljs-string">+</span> <span class="hljs-string">&#x27;/api/v1/memo?creatorId=你的ID&amp;tag=说说&amp;limit=30&#x27;</span><span class="hljs-string">).then(res</span> <span class="hljs-string">=&gt;</span> <span class="hljs-string">res.json()).then(data</span> <span class="hljs-string">=&gt;</span> &#123; <span class="hljs-string">//</span> <span class="hljs-string">注意修改&quot;你的ID&quot;</span><br>        <span class="hljs-string">let</span> <span class="hljs-string">items</span> <span class="hljs-string">=</span> [],<br>            <span class="hljs-string">html</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">icon</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;&lt;svg viewBox=&quot;0 0 512 512&quot;xmlns=&quot;http://www.w3.org/2000/svg&quot;class=&quot;is-badge icon&quot;&gt;&lt;path d=&quot;m512 268c0 17.9-4.3 34.5-12.9 49.7s-20.1 27.1-34.6 35.4c.4 2.7.6 6.9.6 12.6 0 27.1-9.1 50.1-27.1 69.1-18.1 19.1-39.9 28.6-65.4 28.6-11.4 0-22.3-2.1-32.6-6.3-8 16.4-19.5 29.6-34.6 39.7-15 10.2-31.5 15.2-49.4 15.2-18.3 0-34.9-4.9-49.7-14.9-14.9-9.9-26.3-23.2-34.3-40-10.3 4.2-21.1 6.3-32.6 6.3-25.5 0-47.4-9.5-65.7-28.6-18.3-19-27.4-42.1-27.4-69.1 0-3 .4-7.2 1.1-12.6-14.5-8.4-26-20.2-34.6-35.4-8.5-15.2-12.8-31.8-12.8-49.7 0-19 4.8-36.5 14.3-52.3s22.3-27.5 38.3-35.1c-4.2-11.4-6.3-22.9-6.3-34.3 0-27 9.1-50.1 27.4-69.1s40.2-28.6 65.7-28.6c11.4 0 22.3 2.1 32.6 6.3 8-16.4 19.5-29.6 34.6-39.7 15-10.1 31.5-15.2 49.4-15.2s34.4 5.1 49.4 15.1c15 10.1 26.6 23.3 34.6 39.7 10.3-4.2 21.1-6.3 32.6-6.3 25.5 0 47.3 9.5 65.4 28.6s27.1 42.1 27.1 69.1c0 12.6-1.9 24-5.7 34.3 16 7.6 28.8 19.3 38.3 35.1 9.5 15.9 14.3 33.4 14.3 52.4zm-266.9 77.1 105.7-158.3c2.7-4.2 3.5-8.8 2.6-13.7-1-4.9-3.5-8.8-7.7-11.4-4.2-2.7-8.8-3.6-13.7-2.9-5 .8-9 3.2-12 7.4l-93.1 140-42.9-42.8c-3.8-3.8-8.2-5.6-13.1-5.4-5 .2-9.3 2-13.1 5.4-3.4 3.4-5.1 7.7-5.1 12.9 0 5.1 1.7 9.4 5.1 12.9l58.9 58.9 2.9 2.3c3.4 2.3 6.9 3.4 10.3 3.4 6.7-.1 11.8-2.9 15.2-8.7z&quot;fill=&quot;#1da1f2&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&#x27;</span><span class="hljs-string">;</span><br>        <br>        <span class="hljs-string">data.forEach(item</span> <span class="hljs-string">=&gt;</span> &#123; <span class="hljs-string">items.push(Format(item))</span> &#125;<span class="hljs-string">);</span><br>        <span class="hljs-string">if</span> <span class="hljs-string">(items.length</span> <span class="hljs-string">==</span> <span class="hljs-number">30</span><span class="hljs-string">)</span> <span class="hljs-string">document.querySelector(&#x27;.limit&#x27;).style.display</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;block&#x27;</span><span class="hljs-string">;</span><br>        <span class="hljs-string">items.forEach(item</span> <span class="hljs-string">=&gt;</span> &#123;<br>            <span class="hljs-string">html</span> <span class="hljs-string">+=</span> <span class="hljs-string">`&lt;div</span> <span class="hljs-string">class=&quot;talk_item&quot;&gt;&lt;div</span> <span class="hljs-string">class=&quot;talk_meta&quot;&gt;&lt;img</span> <span class="hljs-string">class=&quot;no-lightbox</span> <span class="hljs-literal">no</span><span class="hljs-string">-lazyload</span> <span class="hljs-string">avatar&quot;</span> <span class="hljs-string">src=&quot;这里是你头像链接&quot;&gt;&lt;span</span> <span class="hljs-string">class=&quot;talk_nick&quot;&gt;名称$</span>&#123;<span class="hljs-string">icon</span>&#125;<span class="hljs-string">&lt;/span&gt;&lt;span</span> <span class="hljs-string">class=&quot;talk_date&quot;&gt;$</span>&#123;<span class="hljs-string">item.date</span>&#125;<span class="hljs-string">&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div</span> <span class="hljs-string">class=&quot;talk_content&quot;&gt;$</span>&#123;<span class="hljs-string">item.content</span>&#125;<span class="hljs-string">&lt;/div&gt;&lt;div</span> <span class="hljs-string">class=&quot;talk_bottom&quot;&gt;&lt;div&gt;&lt;span</span> <span class="hljs-string">class=&quot;talk_tag&quot;&gt;#</span> <span class="hljs-string">$</span>&#123;<span class="hljs-string">item.tag</span>&#125;<span class="hljs-string">&lt;/span&gt;&lt;/div&gt;&lt;a</span> <span class="hljs-string">href=&quot;javascript:;&quot;onclick=&quot;goComment(&#x27;$</span>&#123;<span class="hljs-string">item.text</span>&#125;<span class="hljs-string">&#x27;)&quot;&gt;&lt;span class=&quot;icon&quot;&gt;&lt;i class=&quot;fa-solid fa-message fa-fw&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;` // 注意修改头像链接和名称（直接替换掉）</span><br><span class="hljs-string">        &#125;)</span><br><span class="hljs-string">        document.getElementById(&#x27;</span><span class="hljs-string">talk&#x27;).innerHTML</span> <span class="hljs-string">=</span> <span class="hljs-string">html</span><br>    &#125;<span class="hljs-string">)</span><br>    <span class="hljs-string">//</span> <span class="hljs-string">页面评论</span><br>    <span class="hljs-string">function</span> <span class="hljs-string">goComment(e)</span> &#123;<br>        <span class="hljs-string">var</span> <span class="hljs-string">n</span> <span class="hljs-string">=</span> <span class="hljs-string">document.querySelector(&quot;.el-textarea__inner&quot;)</span><br>        <span class="hljs-string">n.value</span> <span class="hljs-string">=</span> <span class="hljs-string">`&gt;</span> <span class="hljs-string">$</span>&#123;<span class="hljs-string">e</span>&#125;<span class="hljs-string">\n\n`;</span><br>        <span class="hljs-string">n.focus();</span><br>        <span class="hljs-string">btf.snackbarShow(&quot;无需删除空行，直接输入评论即可&quot;</span>, <span class="hljs-type">!1,</span> <span class="hljs-number">2e3</span><span class="hljs-string">);</span><br>    &#125;<br>    <span class="hljs-string">//</span> <span class="hljs-string">页面内容格式化</span><br>    <span class="hljs-string">function</span> <span class="hljs-string">Format(item)</span> &#123;<br>        <span class="hljs-string">let</span> <span class="hljs-string">date</span> <span class="hljs-string">=</span> <span class="hljs-string">getTime(new</span> <span class="hljs-string">Date(item.createdTs</span> <span class="hljs-string">*</span> <span class="hljs-number">1000</span><span class="hljs-string">).toString())</span>,<br>            <span class="hljs-string">content</span> <span class="hljs-string">=</span> <span class="hljs-string">item.content</span>,<br>            <span class="hljs-string">tag</span> <span class="hljs-string">=</span> <span class="hljs-string">item.content.match(/\</span>&#123;<span class="hljs-string">(.*?)\</span>&#125;<span class="hljs-string">/g)</span>,<br>            <span class="hljs-string">imgs</span> <span class="hljs-string">=</span> <span class="hljs-string">content.match(/!\</span>[<span class="hljs-string">.*\</span>]<span class="hljs-string">\(.*?\)/g)</span>, <br>            <span class="hljs-string">text</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-string">if</span> <span class="hljs-string">(imgs)</span> <span class="hljs-string">imgs</span> <span class="hljs-string">=</span> <span class="hljs-string">imgs.map(item</span> <span class="hljs-string">=&gt;</span> &#123; <span class="hljs-string">return</span> <span class="hljs-string">item.replace(/!\</span>[<span class="hljs-string">.*\</span>]<span class="hljs-string">\((.*?)\)/</span>, <span class="hljs-string">&#x27;$1&#x27;</span><span class="hljs-string">)</span> &#125;<span class="hljs-string">)</span><br>        <span class="hljs-string">if</span> <span class="hljs-string">(item.resourceList.length)</span> &#123;<br>            <span class="hljs-string">if</span> <span class="hljs-string">(!imgs)</span> <span class="hljs-string">imgs</span> <span class="hljs-string">=</span> []<br>            <span class="hljs-string">item.resourceList.forEach(t</span> <span class="hljs-string">=&gt;</span> &#123;<br>                <span class="hljs-string">if</span> <span class="hljs-string">(t.externalLink)</span> <span class="hljs-string">imgs.push(t.externalLink)</span><br>                <span class="hljs-string">else</span> <span class="hljs-string">imgs.push(`$</span>&#123;<span class="hljs-string">url</span>&#125;<span class="hljs-string">/o/r/$</span>&#123;<span class="hljs-string">t.id</span>&#125;<span class="hljs-string">/$</span>&#123;<span class="hljs-string">t.publicId</span>&#125;<span class="hljs-string">/$</span>&#123;<span class="hljs-string">t.filename</span>&#125;<span class="hljs-string">`)</span><br>            &#125;<span class="hljs-string">)</span><br>        &#125;<br>        <span class="hljs-string">text</span> <span class="hljs-string">=</span> <span class="hljs-string">content.replace(/#(.*?)\s/g</span>, <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">).replace(/\!\</span>[<span class="hljs-string">(.*?)\</span>]<span class="hljs-string">\((.*?)\)/g</span>, <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">).replace(/\</span>&#123;<span class="hljs-string">(.*?)\</span>&#125;<span class="hljs-string">/g</span>, <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">)</span><br>        <span class="hljs-string">content</span> <span class="hljs-string">=</span> <span class="hljs-string">text.replace(/\</span>[<span class="hljs-string">(.*?)\</span>]<span class="hljs-string">\((.*?)\)/g</span>, <span class="hljs-string">`&lt;a</span> <span class="hljs-string">href=&quot;$2&quot;&gt;@$1&lt;/a&gt;`);</span><br>        <span class="hljs-string">if</span> <span class="hljs-string">(imgs)</span> &#123;<br>            <span class="hljs-string">content</span> <span class="hljs-string">+=</span> <span class="hljs-string">`&lt;div</span> <span class="hljs-string">class=&quot;zone_imgbox&quot;&gt;`</span><br>            <span class="hljs-string">imgs.forEach(e</span> <span class="hljs-string">=&gt;</span> <span class="hljs-string">content</span> <span class="hljs-string">+=</span> <span class="hljs-string">`&lt;a</span> <span class="hljs-string">href=&quot;$</span>&#123;<span class="hljs-string">e</span>&#125;<span class="hljs-string">&quot; data-fancybox=&quot;</span><span class="hljs-string">gallery&quot;</span> <span class="hljs-string">class=&quot;fancybox&quot;</span> <span class="hljs-string">data-thumb=&quot;$</span>&#123;<span class="hljs-string">e</span>&#125;<span class="hljs-string">&quot;&gt;&lt;img class=&quot;</span><span class="hljs-literal">no</span><span class="hljs-string">-lazyload&quot;</span> <span class="hljs-string">src=&quot;$</span>&#123;<span class="hljs-string">e</span>&#125;<span class="hljs-string">&quot;&gt;&lt;/a&gt;` // 2023-02-06更新</span><br><span class="hljs-string">            )</span><br><span class="hljs-string">            content += &#x27;&lt;/div&gt;&#x27;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        return &#123;</span><br><span class="hljs-string">            content: content,</span><br><span class="hljs-string">            tag: tag ? tag[0].replace(/\&#123;(.*?)\&#125;/,&#x27;$1&#x27;) : &#x27;无标签&#x27;,</span><br><span class="hljs-string">            date: date,</span><br><span class="hljs-string">            text: text.replace(/\[(.*?)\]\((.*?)\)/g, &#x27;[链接]&#x27; + `$&#123;imgs?&#x27;[图片]&#x27;:&#x27;&#x27;&#125;`)</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    // 页面时间格式化</span><br><span class="hljs-string">    function getTime(time) &#123;</span><br><span class="hljs-string">        let d = new Date(time),</span><br><span class="hljs-string">            ls = [d.getFullYear(), d.getMonth() + 1, d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds()];</span><br><span class="hljs-string">        for (let i = 0; i &lt; ls.length; i++) &#123;</span><br><span class="hljs-string">            ls[i] = ls[i] &lt;= 9 ? &#x27;0&#x27; + ls[i] : ls[i] + &#x27;&#x27;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        if (new Date().getFullYear() == ls[0]) return ls[1] + &#x27;月&#x27; + ls[2] + &#x27;日 &#x27; + ls[3] +&#x27;:&#x27;+ ls[4]</span><br><span class="hljs-string">        else return ls[0] + &#x27;年&#x27; + ls[1] + &#x27;月&#x27; + ls[2] + &#x27;日 &#x27; + ls[3] +&#x27;:&#x27;+ ls[4]</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">&lt;/script&gt;</span><br></code></pre></td></tr></table></figure><p>这里我将代码修改到了适配memos1.4.0以上版本的，如果你的memos版本在1.4.0一下，可以去原教程里找相应的代码，还有要注意的地方就是代码第200行粘贴你的memos地址时记得地址最后不要有‘/’符号</p><h2 id="关于Memos用户ID"><a href="#关于Memos用户ID" class="headerlink" title="关于Memos用户ID"></a>关于Memos用户ID</h2><p>代码中有一处要修改成你自己的ID，我按照Leonus的教程中关于用户ID获取的方法操作之后，发现本该显示ID的地方显示成了我的用户名<img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202308201604729.png" alt="1"></p><p>我原本以为这里的用户名就是我的id，但放到代码中提示是错误的，我在这里卡了好久，在我的一番摸索之下，我发现了一个新的获取id的方法：</p><p>点击memos的RSS</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202308201610379.png" alt="2"></p><p>这里这url中u/后面的数字就是我们的ID</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202308201612824.png" alt="3"></p><p>将你的ID放到代码中去，就能成功部署说说页面了</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在memos中，使用特定的格式，将发布范围设置为所有人可见，发布之后就可以在你的博客页面看到你发的内容了</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">#说说 &#123;说说标签&#125; 我是内容 <span class="hljs-selector-attr">[我是链接]</span>(链接地址) !<span class="hljs-selector-attr">[]</span>(图片链接)<br></code></pre></td></tr></table></figure><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202308201616189.jpg" alt="4"></p><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p><strong>关于更多进阶用法，可以去看<a href="https://blog.leonus.cn/2023/memeos.html">基于Momos实现说说和清单功能</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这几天一直想给博客增加一个说说页面，昨天尝试了用leancloud和artitalk成功部署了页面，但是由于我用的leancloud是国际版</summary>
      
    
    
    
    <category term="教程分享" scheme="http://cdt3211.github.io/categories/%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="博客搭建" scheme="http://cdt3211.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>SQL笔记</title>
    <link href="http://cdt3211.github.io/2023/07/23/SQL%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://cdt3211.github.io/2023/07/23/SQL%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2023-07-23T09:17:46.000Z</published>
    <updated>2023-09-10T11:52:26.328Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL笔记"><a href="#SQL笔记" class="headerlink" title="SQL笔记"></a>SQL笔记</h1><h2 id="DDL-数据库操作"><a href="#DDL-数据库操作" class="headerlink" title="DDL-数据库操作"></a>DDL-数据库操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">查询所有数据库<br><span class="hljs-keyword">show</span> databases;;<br><br>查询当前数据库<br><span class="hljs-keyword">select</span> database();<br><br>创建<br><span class="hljs-keyword">create</span> database [if <span class="hljs-keyword">not</span> exist] 数据库名 [<span class="hljs-keyword">default</span> charset 字符集] [<span class="hljs-keyword">collate</span> 排序规则]<br><br>删除<br><span class="hljs-keyword">drop</span> database [if exist] 数据库名<br><br>使用<br>use 数据库名<br></code></pre></td></tr></table></figure><h2 id="DDL-表操作"><a href="#DDL-表操作" class="headerlink" title="DDL-表操作"></a>DDL-表操作</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql">查询当前数据库所有表（先use）<br><span class="hljs-keyword">show</span> tables;<br><br>查询表结构<br><span class="hljs-keyword">desc</span> 表名；<br><br>查询指定表的建表语句<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名；<br></code></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">creat <span class="hljs-selector-tag">table</span> 表名(<br>字段<span class="hljs-number">1</span> 字段<span class="hljs-number">1</span>类型<span class="hljs-selector-attr">[comment 注释]</span>,<br>字段<span class="hljs-number">2</span> 字段<span class="hljs-number">2</span>类型,<br>...<br>字段n 字段n类型<br>);<br></code></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">添加字段<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> 字段名 类型（长度）[comment 注释][约束]；<br><br>修改数据类型<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 modify 字段名 新数据类型(长度)；<br><br>修改字段名和数据类型<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 change 旧字段名 新字段名 类型(长度)[comment 注释][约束];<br><br>删除字段<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> 字段名;<br><br>修改表名<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 rename <span class="hljs-keyword">to</span> 新表名;<br></code></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql">删除表<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span>[if exist]表名;<br><br>删除指定表，并重新创建该表<br><span class="hljs-keyword">truncate</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h4 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307231718259.png" alt="img"></p><p>M：精度（数字长度）  D：标度（小数长度）</p><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307231718289.png" alt="img"></p><h4 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h4><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307231718279.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL笔记&quot;&gt;&lt;a href=&quot;#SQL笔记&quot; class=&quot;headerlink&quot; title=&quot;SQL笔记&quot;&gt;&lt;/a&gt;SQL笔记&lt;/h1&gt;&lt;h2 id=&quot;DDL-数据库操作&quot;&gt;&lt;a href=&quot;#DDL-数据库操作&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SQL" scheme="http://cdt3211.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>为小米平板解除官方触控笔限制</title>
    <link href="http://cdt3211.github.io/2023/07/06/%E4%B8%BA%E5%B0%8F%E7%B1%B3%E5%B9%B3%E6%9D%BF%E6%8E%A5%E8%A7%A6%E5%AE%98%E6%96%B9%E8%A7%A6%E6%8E%A7%E7%AC%94%E9%99%90%E5%88%B6/"/>
    <id>http://cdt3211.github.io/2023/07/06/%E4%B8%BA%E5%B0%8F%E7%B1%B3%E5%B9%B3%E6%9D%BF%E6%8E%A5%E8%A7%A6%E5%AE%98%E6%96%B9%E8%A7%A6%E6%8E%A7%E7%AC%94%E9%99%90%E5%88%B6/</id>
    <published>2023-07-06T04:52:38.000Z</published>
    <updated>2023-08-21T14:06:10.601Z</updated>
    
    <content type="html"><![CDATA[<p>首先，去官网下载miflash解锁bl，要先绑定，然后等待168小时（或更久）</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061300487.jpg"></p><p>等待时间过后就可以一键解锁，解锁bl会清除平板数据，所以解锁之前记得先备份</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061301486.png"></p><p>然后下载酷安大佬提供的<a href="https://www.coolapk.com/feed/44557044?shareKey=ODY0MDc5MmM5NTk2NjRhNjRiM2U~&shareUid=2971117&shareFrom=com.coolapk.market_13.0.2">一键解锁工具</a>（必须是对应版本的）</p><p>下载完成解压后打开start.bat<img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061305653.png"></p><p>看完txt中的内容没有问题后关掉，然后在另一个窗口中操作</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061306481.png"></p><p>先安装驱动，然后就可以刷入root了</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061306184.png"></p><p>刷完root开机后，将工具包里Magisk文件夹中的面具安装包传到平板中安装之后就可以刷入面具和lsp模块了</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061321830.png"></p><p>然后在lsp的仓库中搜索maxmipad模块，下载安装（安卓12及以上才可以安装），打开“去除触控笔蓝牙限制”之后点击最下面的重启系统，就可以使用与小米灵感触控笔协议相同的第三方的触控笔了</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061333699.jpg"></p><p>下面是是酷安大佬整理的相同协议的笔</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061353618.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先，去官网下载miflash解锁bl，要先绑定，然后等待168小时（或更久）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307061300487.jpg&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="教程分享" scheme="http://cdt3211.github.io/categories/%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="刷机" scheme="http://cdt3211.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>林花谢了春红，太匆匆。无奈朝来寒雨晚来风</title>
    <link href="http://cdt3211.github.io/2023/06/04/%E6%9E%97%E8%8A%B1%E8%B0%A2%E4%BA%86%E6%98%A5%E7%BA%A2%EF%BC%8C%E5%A4%AA%E5%8C%86%E5%8C%86%E3%80%82%E6%97%A0%E5%A5%88%E6%9C%9D%E6%9D%A5%E5%AF%92%E9%9B%A8%E6%99%9A%E6%9D%A5%E9%A3%8E/"/>
    <id>http://cdt3211.github.io/2023/06/04/%E6%9E%97%E8%8A%B1%E8%B0%A2%E4%BA%86%E6%98%A5%E7%BA%A2%EF%BC%8C%E5%A4%AA%E5%8C%86%E5%8C%86%E3%80%82%E6%97%A0%E5%A5%88%E6%9C%9D%E6%9D%A5%E5%AF%92%E9%9B%A8%E6%99%9A%E6%9D%A5%E9%A3%8E/</id>
    <published>2023-06-04T15:11:00.000Z</published>
    <updated>2023-08-21T13:07:17.707Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在余华的小说《兄弟》中，林红是刘镇出了名的美人，他和宋刚的爱情生活也让人羡慕不已，可是后来发生了一系列事情，她与宋刚的弟弟李光头勾结上了，宋刚知道后悲痛万分，卧轨自杀，林红和李光头从此形同陌路，冷眼相对，林红在悲痛了一段时间后，开起了美发厅，当上了老鸨。  </p><p>&emsp;&emsp;当初宋凡平死后，李兰也悲痛万分，从那以后七年没洗过头，她用这种方式来表示她对宋凡平的爱和忠贞。书中写道，“没有人知道李兰对宋凡平的感情有多深，那是比海洋还要深厚的爱。”林红和宋刚之间的感情也是很深厚的，宋刚自杀后她在宋刚尸体前说过，“无论我做过什么，我一生爱过的人只有你一个。”但是之后却开美发厅当上了老鸨，这是宋刚最不愿看到的，她为什么要这么做呢？  </p><p>&emsp;&emsp;首先，挣钱肯定是原因之一。宋刚是因为林红和李光头的私下勾结而自杀，宋刚自杀后林红与李光头也互相痛恨从此决裂了，她在为宋刚置办的豆腐宴上收到了数目不小的挽金，之后辞掉了针织厂的工作，在别的地方买了套新房子搬走了。但靠着这笔钱肯定不能过一辈子，那么她为了生计就需要做点什么，因此将之前的旧房子改造成了美发厅来赚钱。  </p><p>&emsp;&emsp;但是，有那么多的方法可以挣钱，林红偏偏选择了开美发厅当老鸨，这里肯定还有其他原因。  </p><p>&emsp;&emsp;林红和宋刚刚结婚时，她十分节俭，几乎没给自己买过新衣服，但是每天都会在宋刚口袋里塞几元钱怕他吃不饱饭，还托关系斥巨资给他买了辆永久牌自行车，几乎把钱都花在了宋刚身上，那时的她觉得可以一直这样幸福地生活下去。但是后来宋刚身体垮掉了，还得了肺病，宋刚干不了什么正经工作，家庭收入大幅降低，治病又要花费巨额金钱，这让他们本不富裕的家庭雪上加霜，在刘厂长拿裁员一事威胁林红出卖肉体时，她忍受不了最终向李光头寻求了帮助。见识到李光头是如何用金钱和地位轻松地帮她解决医药费和裁员问题后，她内心的观念发生了改变，她逐渐地意识到金钱的重要性，也变得更加现实。这种观念的转变驱使她后来选择做了老鸨这一盈利丰厚的职业。  </p><p>&emsp;&emsp;当初宋刚不想因为给自己治病而到处借钱背上一大笔负债，他为了给自己赚取医药费也为了让林红过上更好的生活，跟着周游去外面打拼，他走后林红每天都十分想念他，但是后来还是没能控制住自己的欲望，在宋刚为金钱放下尊严在各个城市间游走时，林红却在和李光头寻欢作乐。在宋刚死后，她意识到了这一点，认为自己不配像之前一样心安理得地生活下去，她的背叛应该遭受报应，或许对她而言，做老鸨就是施加在自己身上的一种恶报。  </p><p>&emsp;&emsp;除此之外，我认为林红心中还存在一丝报复心理。书中写道，“我们刘镇有谁真正目睹过林红的人生轨迹？一个容易害羞的纯情少女，一个恋爱时的甜蜜姑娘，一个心里只有宋刚的贤惠妻子，一个和李光头疯狂做爱三个月的疯狂情人，一个生者戚戚的寡妇，一个面无表情深居简出的独身女人。然后美发厅出现了，来的都是客以后，一个见人三分笑的女老板林红也就应运而生。”林红一步步地从当初单纯浪漫的小姑娘变成了如今红灯区的老鸨，从林红变成了林姐，向生活低下了头。她当初没有控制住自己的欲望，他觉得天下的人都一个样，因此开了这家美发厅，让到来的客人尽情享受自己的欲望，看着那些背着妻子前来“偷腥”的客人，她能够得到些许慰藉，从而减轻自己的负罪感。  </p><p>&emsp;&emsp;总的来说，谋取生计、观念的转变、内心的愧疚、报复心理等，种种原因驱使林红最后选择了开美发厅做老鸨。  </p><p>&emsp;&emsp;罗翔老师将林红这个名字解读为南唐后主李煜《相见欢》中的一句词，“林花谢了春红，太匆匆。无奈朝来寒雨晚来风”，这句词的意思是，树林间的红花已经凋谢，实在是去得太匆忙了。也是无可奈何啊，花儿怎么能经得起晨起的寒雨，暮晚凄风。正如小说中的林红一样，怎么经受得住那么多的打击和变故呢，她也不过是一个普普通通的人，是现实中我们的缩影，她做的选择虽然被一些人不理解，但也是合乎情理的，她的这一选择也更能给我们留下深刻的印象，从而让我们有所启发。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;在余华的小说《兄弟》中，林红是刘镇出了名的美人，他和宋刚的爱情生活也让人羡慕不已，可是后来发生了一系列事情，她与宋刚的弟弟李光头勾结上了，宋刚知道后悲痛万分，卧轨自杀，林红和李光头从此形同陌路，冷眼相对，林红在悲痛了一段时间后，开起了美发厅，当上了老</summary>
      
    
    
    
    <category term="读书感悟" scheme="http://cdt3211.github.io/categories/%E8%AF%BB%E4%B9%A6%E6%84%9F%E6%82%9F/"/>
    
    
    <category term="《兄弟》" scheme="http://cdt3211.github.io/tags/%E3%80%8A%E5%85%84%E5%BC%9F%E3%80%8B/"/>
    
    <category term="余华" scheme="http://cdt3211.github.io/tags/%E4%BD%99%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title>数据结构期末重点</title>
    <link href="http://cdt3211.github.io/2023/05/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%9C%9F%E6%9C%AB%E9%87%8D%E7%82%B9/"/>
    <id>http://cdt3211.github.io/2023/05/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%9C%9F%E6%9C%AB%E9%87%8D%E7%82%B9/</id>
    <published>2023-05-26T14:21:08.000Z</published>
    <updated>2023-10-18T14:24:13.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p>数据：是客观事物的符号表示，指所有能输入到计算机中并被计算机程序处理的符号的总称。</p><p>数据元素：数据的基本单位，在计算机中通常作为一个整体进行考虑和处理。</p><p>数据项：组成数据元素的、有独立含义的、不可分割的最小单位。</p><p>数据对象：性质相同的数据元素的集合，是数据的一个子集。</p><p>算法的复杂度</p><p>时间复杂度：取决于问题的规模和待处理数据的初态。用O（n）来表示。</p><p>空间复杂度</p><p>顺序表单链表循环单链表双循环双 创建插入删除分析 表时间复杂度比较 写代码单链表循环单链表顺序表</p><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><p>栈和队列特性 输出结果多少种，序列什么样，空间容量 代码 栈和队列创建插入删除判空满 栈的存取结果 顺序循环链式 空满入出四个操作点</p><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><p>串和数组管应表 串的 bf法（星） kmp算法 数组（无大题） 特殊矩阵和稀疏矩阵的压缩存储 对称三角带状三类矩阵 ij位置k的值 元素数量 下标值计算 广义表基本概念 表头表尾表长度深度</p><h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><p>树 二叉树基本概念五条性质 二叉链式存储 遍历 递归实现算法 函数变形 变例序列确定树形 普通树（节点） 森林 二叉树 互相转换 哈夫曼树构造 求解 代码 现中后续变例 简单变形</p><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><p>图 （无代码） 基本概念 存储结构（矩阵临界链表分类无项有项加权不加权） 基于存储结构的深度广度变例（会读） 图的应用 序列求解 le网关键路径求解 最小生成数 普利姆 克里斯卡尔算法 最短路径（两个，斯特拉和弗洛伊德） 查找 哈希查找 构造过程 平均查找次数的计算 基于顺序表的顺序查找和二分查找（逻辑）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;p&gt;数据：是客观事物的符号表示，指所有能输入到计算机中并被计算机程序处理的符号的总称。&lt;/p&gt;
&lt;p&gt;数据元素：数据的基本单位，在计算机</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数据结构与算法" scheme="http://cdt3211.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑笔记</title>
    <link href="http://cdt3211.github.io/2023/04/23/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://cdt3211.github.io/2023/04/23/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E7%AC%94%E8%AE%B0/</id>
    <published>2023-04-23T04:45:36.000Z</published>
    <updated>2023-08-21T13:09:02.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-数制与码制"><a href="#一-数制与码制" class="headerlink" title="一 数制与码制"></a>一 数制与码制</h2><p>A/D 模/数转换<br>D/A 数/模转换</p><ul><li><p><strong>四代计算机主要元器件</strong></p><p>电子管→晶体管→小规模集成电路→中大规模集成电路<br>发展趋势：速度、功能、可靠性提高，体积、价格、功耗降低</p></li><li><p><strong>数字电路逻辑类型</strong></p><p>组合逻辑电路：无记忆功能</p><p>时序逻辑电路：有记忆功能</p></li><li><p><strong>数字逻辑电路研究的两个主要任务</strong></p><p>逻辑分析</p><p>逻辑设计</p></li><li><p><strong>R进制</strong></p><p>基数:数字个数，“逢R进一”</p><p>位权：表示不同数位上数值大小的一个固定常数</p><p>二进制位数太长且字符单调，书写、记忆和阅读不方便，姑通常采用八进制或十六进制数作为缩写。</p></li><li><p><strong>常用机器码</strong></p><p>原码：符号位（0正1负）+真值绝对值，不能直接进行减法运算</p><p>反码：正数不变，负数符号位为1，数值按位取反</p><p>补码：正数不变，负数取反码再加1</p></li><li><p><strong>可靠性编码</strong></p><p>奇偶校验</p><p>格雷码：最高位不变，其他位与前面一位异或（同0异1）</p></li><li><p><strong>字符编码（ASCII码）</strong></p><p>用7位2进制码表示128种字符，最左边增加一位奇偶校验符</p></li></ul><h2 id="二-逻辑代数基础"><a href="#二-逻辑代数基础" class="headerlink" title="二 逻辑代数基础"></a>二 逻辑代数基础</h2><p><strong>逻辑代数</strong>：一个封闭的代数系统，由逻辑变量集K、常量0和1以及“逻辑×（与）”、“逻辑＋（或）”、“逻辑反（非）”三种基本运算所构成</p><ul><li><p><strong>逻辑代数公理</strong></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334384.png" alt="Untitled"></p></li><li><p><strong>逻辑代数定理</strong></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334433.png" alt="Untitled"></p></li><li><p><strong>反演规则</strong></p><p>将逻辑函数表达式中所有的“·”变成“+”，“+”变成“·”；“0”变成“1”；“1”变成“0”；原变量变成反变量，反变量变成原变量。并保持原函数中的运算顺序不变，得到原函数F的反函数¬F.</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334423.png" alt="Untitled"></p></li><li><p><strong>对偶规则</strong></p><p>将逻辑函数表达式F中所有的“·”变成“+”,“+”变成“·”，“0”变成“1”，“1”变成“0”，并保持原函数中的运算顺序不变，则所得到的新的逻辑表达式称为函数F的对偶式，记作F’.</p><p>若两个逻辑函数表达式F和G相等，则其对偶式F’和G’也相等。</p></li><li><p><strong>异或和同或</strong></p><p>异或</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334428.png" alt="Untitled"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334429.png" alt="Untitled"></p><p>同或</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334428.png" alt="Untitled"></p></li><li><p><strong>最小项</strong></p><p>定义：具有n个变量的函数的积项包含全部n个变量，每个变量都以原变量或反变量的形式出现一次.</p><p>标准与或表达式：一个完全由最小项组成的函数.</p><p>下标取值：将原变量看作1，反变量看作0，将得到的二进制数对应的十进制作为下标值.</p><p>性质：</p><ol><li>n个变量一共有2ⁿ个最小项，但一个函数包含几个最小项由实际问题决定。</li><li>在输入变量的任何取值下，必有一个最小项且仅有一个最小项的值为1</li><li>任意两个不同的最小项的乘积为0</li><li>所有最小项的和为1</li><li>任一个n变量的最小项，都有n个相邻的最小项</li></ol></li><li><p><strong>最大项</strong></p><p>定义：具有n个变量的函数的“和”项包含全部n个变量，每个变量都以原变量或反变量的形式出现一次.</p><p>标准或与表达式：一个完全由最大项组成的函数</p></li></ul><h2 id="三-集成门电路"><a href="#三-集成门电路" class="headerlink" title="三 集成门电路"></a>三 集成门电路</h2><ul><li><p><strong>优点</strong></p><p>可靠性高、可维性好、功耗低、成本低，大大简化设计和调试过程。</p></li><li><p><strong>分类（根据半导体器件）</strong></p><ul><li><p>双极型集成电路：采用双极性半导体器件作为元件。速度快、负载能力强、功耗较大、集成度较低。</p><p>TTL：三极管-三极管电路</p><p>ECT：射极耦合电路</p><p>I²L：集成注入电路</p></li><li><p>单极型（MOS）集成电路：金属-氧化物半导体场效应管作为元件。结构简单、制造方便、集成度高、功耗低、速度较慢</p><p>PMOS：P-沟道MOS</p><p>NMOS：N-沟道MOS</p><p>CMOS：C-沟道MOS</p></li></ul></li><li><p><strong>晶体二极管</strong></p><p>P阳极 N阴极</p><p>正向特性：</p><p>门槛电压 ( VTH )：使二极管开始导通的正向电压，一般锗管约0.1V，硅管约0.5V。</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334897.png" alt="Untitled"></p><p>反向特性：</p><p>二极管在反向电压 VR 作用下，处于截止状态，反向电阻很大，反向电流 IR 很小（将其称为反向饱和电流，用 IS 表示，通常可忽略不计）,二极管的状态类似于开关断开。而且反向电压在一定范围内变化基本不引起反向电流的变化。</p><p>反向恢复时间：二极管从正向导通到反向截至所需要的时间。</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334915.png" alt="Untitled"></p><p>开通时间：二极管从反向截止到正向导通的时间。（二极管的开通时间很短，对开关速度影响很小，相对反向恢复时间而言几乎可以忽略不计。）</p></li><li><p><strong>晶体三极管</strong></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334932.png" alt="Untitled"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334948.png" alt="Untitled"></p><p>特性：由集电极C和发射极E两个PN结构成。由截止、放大、饱和三种工作状态。</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334801.png" alt="Untitled"></p><p>b站视频讲解<a href="https://www.bilibili.com/video/BV1kv411574Y/?share_source=copy_web&vd_source=895c77a92fb7f7676017e8469a8e54b8">三极管导电原理</a> <a href="https://www.bilibili.com/video/BV1Yt411N7pk/?share_source=copy_web&vd_source=895c77a92fb7f7676017e8469a8e54b8">【三极管&amp;非门】如何利用三极管的导通和截止，构成一个具有非逻辑的门电路</a></p></li><li><p><strong>TTL门电路</strong></p><p>重要参数</p><p>门槛电压：0.5V（硅）0.1V（锗）</p><p>导通电压：0.7V（硅）0.3V（锗）</p><p>饱和导通压降：0.3V</p></li><li><p><strong>逻辑门</strong></p><p>基本逻辑门</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334819.png" alt="Untitled"></p><p>复合逻辑门</p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334837.png" alt="Untitled"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334856.png" alt="Untitled"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334871.png" alt="Untitled"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334886.png" alt="Untitled"></p></li><li><p>两种特殊逻辑门</p><p>集电极开路门（OC门）：输出端可以相互连接</p><p>三态输出门（TS门）：三种输出状态，输出高电平、输出低电平（两种工作状态）和高电阻状态（禁止状态）</p></li><li><p>MOS集成门电路</p><p>MOS集成电路的基本元件是MOS晶体管。MOS晶体管是一种电压控制器件，它的三个电极分别称为栅极(G)、漏极(D)和源极(S)，由栅极电压控制漏源电流。</p><p>分类：</p><ol><li>使用N沟道MOS管的NMOS电路。</li><li>使用P沟道MOS管的PMOS电路。</li><li>同时使用NMOS管和PMOS管的CMOS电路。</li></ol><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334755.png" alt="Untitled"></p><p><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031334771.png" alt="Untitled"></p></li><li><p>正逻辑与负逻辑</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-数制与码制&quot;&gt;&lt;a href=&quot;#一-数制与码制&quot; class=&quot;headerlink&quot; title=&quot;一 数制与码制&quot;&gt;&lt;/a&gt;一 数制与码制&lt;/h2&gt;&lt;p&gt;A/D 模/数转换&lt;br&gt;D/A 数/模转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;四代计</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://cdt3211.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数字逻辑" scheme="http://cdt3211.github.io/tags/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>晚安，坂本龙一教授</title>
    <link href="http://cdt3211.github.io/2023/04/02/%E6%99%9A%E5%AE%89%EF%BC%8C%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80%E6%95%99%E6%8E%88/"/>
    <id>http://cdt3211.github.io/2023/04/02/%E6%99%9A%E5%AE%89%EF%BC%8C%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80%E6%95%99%E6%8E%88/</id>
    <published>2023-04-02T15:21:36.000Z</published>
    <updated>2023-12-06T14:11:31.112Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f446a32b8d7338f0358648d7ac79e3dd0ce30cab62db07bd2759584f6112c81e">1b693c4938223286468132b2f7068bf6dfee07f365da88e0f20fb98ce9ee8b531f892ed273e8200ea8f5eebbf400829e4f21ac1f9684501fcd5e6ddd3963c3dc2e3b6c54df6e1599b9599a151c9cda942d6079e9e5658b9c2e80c0c8798e42d7abce63a667663a109f95843df45b3b623f8734accbb38f35e096920fa4a5c4b20510e946afd5586406aef914b639b9f4dcb8aa3b0a8a8efae6ee41b1e08e8dbd0448f9531c7d61569d86f7e93d366af77fd3f6c95f900bab44deec5af063dc9773b83894a368c1fc39ebeaedbf80eaac15da5a12d98e25928c94e4e84b13ebc806e6d5672e9fa7df28de35b5b2afaa907d2a258a8aae8eb848e66c121ce4179b97203ad41cdf01164686ea3c316c4df7da9b277a05689bbdd3b881715ce71cbf011ee1e898ad89d53a4c34d7680d2e8253ea9639b74e76ff9eb4c542b4b42f4b95f92ac2ede1b585bc6107ea9ebabd989ee205797133039934ccac1d44ecae6cdfee3f39ae7106e15e7bdf0a55dbf5da60ee4884f0fba441e503dc5a8df5192ee11350dce03556e837f6bfba7ee6c94765d5ccf67cacdc69fba296247f1b9492e8fa93e870acdbab6ef01b44b6d683f80ccfff8a7c48d621bb36c2bf6634a08bc96487832c1d4e04b920c53b6d3f0eed19d3830a18ca98b852cde2964c0b228a59dcd5cd616005d2817e9d63d88e3ec2f7c058a75a16d7030f0a4f26d7c90c41d582655f159f711f66b0e790513198faf29e3090e10981ed27d4da89f0e0fd55dbede6d5f612df3097b759ab9e000d5bf656099435469554f8efcc1ad364ab3d006f5b05e165c123a14385378f520467e05b45b8c0c2ac301fa3dcd00c0b942f0743847ea7471c98a72838b132058b5d69bcdfd6f26b706b44984164f3dbfe7f965e24cafad5e9e1502ac3b816e2801ce90436438cb679f57ad11a6abeba9b459b60c19622e67cd54f1f88bf90356c38aa0d30394512dcdcf5b0ce84eae737c1977c0ad887d9f657c27eaec018d3585f94a07858b3f97f7f0bcd07ae09900007789a95a65296961c8b633eb4a4ee9511c608cf0fad2f19f3ce321177033f9550835fba48ae43a4bd714fbba81a68f2406043b93729f16915e82017a731b68c5f87f7cf5ccd781a8b848842d274f542b986f1cf197fa840de0253768f6de18acfbf3a83675dc70535cb668e4c8121ab1bd39fa568dbb3e05dd6e95e5a1081ff22d42bda597e4382e98deab90560b423f8e79beab1e8e5425d4cae3bd9f2f7963c029b867b789907bb88d3fbaa26210dabb7481853945e6e46ec7848b9e4ac0e55184fefccbbfa401fc1a210c43dc9298398ef9edcab4dcf6914361e067efe2145c888dc5e8628aaf21baf21cd33a88312de01a381a6776ac4131cd9b68795afc2dbdc9199b25603abc8e760364936d33b3da1003a3277a379b20bec78bf189cd4f2a0ae1c310d5974eed7b080bdf2aede77d1a7a15d9c8380a90eba09f555b8428e67c09aa4f47b1e7cd4afe732cab748298d0489b6a8bbc21f31def2412ce6f6a40aa46cf4ee0170cb8962d39c20f2f892a9a435e604144eaa80eddf8c83ba3a2b714a227dffaa48ced66f4e579e5143c2aa372e9d7922550ba175e0feabeb50960653a37de6e124137487a3d4df076402aed4b2ed9bdc039567beaecb68b3aa720d9b7f4110642100f8b1feab7d673a4686a4dc616b5d684a47ac6e9e582fc3b42fecd26ad5a75e05e15ee11f188b4ace55b8b5e82f2e8cc72b266aafdf10121c8aa842855af11c28ce8ba81ce31bcf30da6405a5a82eaac9e0e9918d29c40458f5d94596fea699d3dcae3542d521340752d62e87ac40f50261ee509e65e8acd71f755a015a3874e20df6684cdfbf156cee04c50f80ebdeb0ede86d623d51572bd197e7399a999365f1886975e53bd60181778d96e97683f74b0a947ef2adf835392bcfd8fca391ef6fc8dfcbce12641c0d950efaaa49fa4e889be0bca9dc518c6cc214f92055d0ea20ec10dfaa37f38374c3c98dfe48f68b44de1daa8fef753cbf22d30d55b92fd3e9cbd5983c9fc5af29dfef669f1fd965200490a10cf61f7b37315d7e8266c689ce59fc387619ea6af7c33692ec245557e6bf3cd0ad648d23c76d59defca4e5711d37539935ad9c8956c50bf63fb9360c7eb5875dc23619c1ed60427271dda3a2eaefc9f9419fe74bac6e17fe8c08bfeac941e27c725322d075f5c6f2218c1f6b564e93aa3962aff177d671fcf4df54dd55c060ce21b96a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="日常" scheme="http://cdt3211.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="坂本龙一" scheme="http://cdt3211.github.io/tags/%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>分享一个不用魔法也能快速访问github的工具</title>
    <link href="http://cdt3211.github.io/2023/03/31/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://cdt3211.github.io/2023/03/31/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2023-03-31T10:41:47.000Z</published>
    <updated>2023-08-21T14:06:24.132Z</updated>
    
    <content type="html"><![CDATA[<p>在部署博客过程中，我发现我的电脑不用魔法就无法访问github，但是用了魔法之后在执行hexo d 的命令时仍然会出现如图所示的问题<br><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031338121.png"><br>于是我在网上找到了一个工具可以不用魔法就能让我访问github<br>链接：<a href="https://www.dogfight360.com/blog/475/">https://www.dogfight360.com/blog/475/</a><br><img src="https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/202307031339303.png"><br>用这个工具修改hosts后，完美解决了我的问题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在部署博客过程中，我发现我的电脑不用魔法就无法访问github，但是用了魔法之后在执行hexo d 的命令时仍然会出现如图所示的问题&lt;br&gt;&lt;img src=&quot;https://abnerblog-1317606226.cos.ap-nanjing.myqcloud.com/</summary>
      
    
    
    
    <category term="教程分享" scheme="http://cdt3211.github.io/categories/%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="博客搭建" scheme="http://cdt3211.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
